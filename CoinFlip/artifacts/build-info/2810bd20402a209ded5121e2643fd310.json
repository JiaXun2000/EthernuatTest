{
	"id": "2810bd20402a209ded5121e2643fd310",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.13",
	"solcLongVersion": "0.8.13+commit.abaa5c0e",
	"input": {
		"language": "Solidity",
		"sources": {
			"CoinFlip/attackCoinFlip.sol": {
				"content": "pragma solidity ^0.8.0;\r\n\r\ncontract AttackCoinFlip{\r\n    \r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"CoinFlip/attackCoinFlip.sol": {
				"AttackCoinFlip": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"CoinFlip/attackCoinFlip.sol\":27:60  contract AttackCoinFlip{... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"CoinFlip/attackCoinFlip.sol\":27:60  contract AttackCoinFlip{... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220037a33a92b7aa0c40fa75462b042278caaa7f549c4626cb26e3ea72ddf5208ca64736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220037a33a92b7aa0c40fa75462b042278caaa7f549c4626cb26e3ea72ddf5208ca64736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SUB PUSH27 0x33A92B7AA0C40FA75462B042278CAAA7F549C4626CB26E3EA72DDF MSTORE ADDMOD 0xCA PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "27:33:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220037a33a92b7aa0c40fa75462b042278caaa7f549c4626cb26e3ea72ddf5208ca64736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SUB PUSH27 0x33A92B7AA0C40FA75462B042278CAAA7F549C4626CB26E3EA72DDF MSTORE ADDMOD 0xCA PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "27:33:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 27,
									"end": 60,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 27,
									"end": 60,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 27,
									"end": 60,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 27,
									"end": 60,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 27,
									"end": 60,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27,
									"end": 60,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 27,
									"end": 60,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 27,
									"end": 60,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 27,
									"end": 60,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27,
									"end": 60,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27,
									"end": 60,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 27,
									"end": 60,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 27,
									"end": 60,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 27,
									"end": 60,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 27,
									"end": 60,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 27,
									"end": 60,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27,
									"end": 60,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 27,
									"end": 60,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27,
									"end": 60,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 27,
									"end": 60,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27,
									"end": 60,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220037a33a92b7aa0c40fa75462b042278caaa7f549c4626cb26e3ea72ddf5208ca64736f6c634300080d0033",
									".code": [
										{
											"begin": 27,
											"end": 60,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 27,
											"end": 60,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27,
											"end": 60,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27,
											"end": 60,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27,
											"end": 60,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27,
											"end": 60,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"CoinFlip/attackCoinFlip.sol\":\"AttackCoinFlip\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"CoinFlip/attackCoinFlip.sol\":{\"keccak256\":\"0x5ea4bd60b95d1256d9a25bdeea5fa5c7db7cbd685de22c900e6f724a2e3db8dc\",\"urls\":[\"bzz-raw://3d50f897bddea8094b8494339e4edaf65cc71df27fced84ef108d29613ec6c9d\",\"dweb:/ipfs/QmXYkgWb55r5ZrH12MsWpyYy382YbwtF1KWM2fuByQBX9W\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> CoinFlip/attackCoinFlip.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "CoinFlip/attackCoinFlip.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"CoinFlip/attackCoinFlip.sol": {
				"ast": {
					"absolutePath": "CoinFlip/attackCoinFlip.sol",
					"exportedSymbols": {
						"AttackCoinFlip": [
							2
						]
					},
					"id": 3,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AttackCoinFlip",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2,
							"linearizedBaseContracts": [
								2
							],
							"name": "AttackCoinFlip",
							"nameLocation": "36:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 3,
							"src": "27:33:0",
							"usedErrors": []
						}
					],
					"src": "0:60:0"
				},
				"id": 0
			}
		}
	}
}