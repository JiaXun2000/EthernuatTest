The child contract does not rewrite the parent contract, so that the hacker can call the method of the parent contract to attack.

Therefore, we can transfer the locked balance in the contract according to the transferFrom function in ERC20. Before that, we need to approve our attack contract.

await contract.approve(player, toWei("1000000"))

await contract.transferFrom(player,contract.address,toWei("1000000"))

When using code that's not your own, it's a good idea to familiarize yourself with it to get a good understanding of how everything fits together. 
This can be particularly important when there are multiple levels of imports (your imports have imports) or when you are implementing authorization controls, e.g. 
when you're allowing or disallowing people from doing things. 
In this example, a developer might scan through the code and think that transfer is the only way to move tokens around, 
low and behold there are other ways of performing the same operation with a different implementation.

