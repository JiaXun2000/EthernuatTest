For the delegatecall method, it is generally not recommended, because it is easy to become a target for hackers, unless it is an upgradeable contract.

Don't care what type it is, the type is just a representation, and their essence is a binary number.

The state variable changed by delegatecall is the first slot in the called contract, then it is fed back to the calling contract, 
and the changed slot is the first slot of the called contract. 
In this example, "setTime" method changes the first slot of the called contract, 
so the first slot of this contract, timeZone1Library, has changed.

interesting, very interesting.

await contract.setFirstTime("Attack address")

await contract.owner()

await contract.setFirstTime(palyer)
await contract.owner()
//at this time, onwer converted to player.

As the previous level, delegate mentions, the use of delegatecall to call libraries can be risky. 
This is particularly true for contract libraries that have their own state. 
This example demonstrates why the library keyword should be used for building libraries, as it prevents the libraries from storing and accessing state variables.


