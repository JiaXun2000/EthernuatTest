{
	"id": "27d0a96cd2913fd016a96233371a0990",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.13",
	"solcLongVersion": "0.8.13+commit.abaa5c0e",
	"input": {
		"language": "Solidity",
		"sources": {
			"Force/attackForce.sol": {
				"content": "pragma solidity ^0.8.0;\r\n\r\ncontract Attack{}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Force/attackForce.sol": {
				"Attack": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Force/attackForce.sol\":27:44  contract Attack{} */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Force/attackForce.sol\":27:44  contract Attack{} */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201bfd238b733c5b7d0e9b22ffb3f7e6595964f1399f86dfa2b7b56dd721135ecc64736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea26469706673582212201bfd238b733c5b7d0e9b22ffb3f7e6595964f1399f86dfa2b7b56dd721135ecc64736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHL REVERT 0x23 DUP12 PUSH20 0x3C5B7D0E9B22FFB3F7E6595964F1399F86DFA2B7 0xB5 PUSH14 0xD721135ECC64736F6C634300080D STOP CALLER ",
							"sourceMap": "27:17:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea26469706673582212201bfd238b733c5b7d0e9b22ffb3f7e6595964f1399f86dfa2b7b56dd721135ecc64736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHL REVERT 0x23 DUP12 PUSH20 0x3C5B7D0E9B22FFB3F7E6595964F1399F86DFA2B7 0xB5 PUSH14 0xD721135ECC64736F6C634300080D STOP CALLER ",
							"sourceMap": "27:17:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 27,
									"end": 44,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 27,
									"end": 44,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 27,
									"end": 44,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 27,
									"end": 44,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 27,
									"end": 44,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27,
									"end": 44,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 27,
									"end": 44,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 27,
									"end": 44,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 27,
									"end": 44,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27,
									"end": 44,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27,
									"end": 44,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 27,
									"end": 44,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 27,
									"end": 44,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 27,
									"end": 44,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 27,
									"end": 44,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 27,
									"end": 44,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27,
									"end": 44,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 27,
									"end": 44,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27,
									"end": 44,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 27,
									"end": 44,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27,
									"end": 44,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201bfd238b733c5b7d0e9b22ffb3f7e6595964f1399f86dfa2b7b56dd721135ecc64736f6c634300080d0033",
									".code": [
										{
											"begin": 27,
											"end": 44,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 27,
											"end": 44,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27,
											"end": 44,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27,
											"end": 44,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27,
											"end": 44,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27,
											"end": 44,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Force/attackForce.sol\":\"Attack\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Force/attackForce.sol\":{\"keccak256\":\"0xe99f88ec908e7ee2f09be41e36260b10d40a59b8361ef3b7092549a094dc4e8f\",\"urls\":[\"bzz-raw://10aa4b044b730afc608dc8b13652c47b4b20e2013a5047614ecef1f5fe84e592\",\"dweb:/ipfs/QmXaDkVetbBCTE8PXqUcwVny3SDDcwyyt6Bke6kpncoBq7\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> Force/attackForce.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "Force/attackForce.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"Force/attackForce.sol": {
				"ast": {
					"absolutePath": "Force/attackForce.sol",
					"exportedSymbols": {
						"Attack": [
							2
						]
					},
					"id": 3,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Attack",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2,
							"linearizedBaseContracts": [
								2
							],
							"name": "Attack",
							"nameLocation": "36:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 3,
							"src": "27:17:0",
							"usedErrors": []
						}
					],
					"src": "0:44:0"
				},
				"id": 0
			}
		}
	}
}